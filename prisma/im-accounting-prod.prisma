generator client {
  provider = "prisma-client-js"
  output   = "./clients/im-accounting-prod"
}

datasource db {
  provider = "postgresql"
  url      = env("IM_ACCOUNTING_PROD_URL")
}

model big_org {
  id                    Int                     @id @default(autoincrement())
  name                  String?                 @db.VarChar
  access_id             String?                 @db.VarChar
  access_secret         String?                 @db.VarChar
  inventory_ledger      inventory_ledger[]
  inventory_ledger_bill inventory_ledger_bill[]
  scm_shop              scm_shop[]
  scm_shop_brand        scm_shop_brand[]
  supplier              supplier[]
}

model biz_type {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @unique @db.VarChar(50)
  created_at            DateTime                @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at            DateTime                @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  biz_bill_type_id      Int?
  biz_type_bill         biz_type_bill?          @relation(fields: [biz_bill_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory_ledger      inventory_ledger[]
  inventory_ledger_bill inventory_ledger_bill[]
}

model cities {
  id             Int              @id
  name           String?          @unique(map: "unique_city_name") @db.VarChar
  scm_shop       scm_shop[]
  supplier_items supplier_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model client_tier {
  id         Int        @id @default(autoincrement())
  tier_name  String?    @db.VarChar(50)
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  scm_shop   scm_shop[]
}

model day_info {
  id          String    @id @db.VarChar
  is_working  Int?
  is_holiday  Int?
  day_of_week Int?
  date        DateTime? @db.Date
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model generic_items {
  id                 Int                @id(map: "scm_goods_pkey") @default(autoincrement())
  name               String             @db.VarChar(60)
  category_id        Int
  status             Int                @default(1) @db.SmallInt
  create_time        DateTime?          @default(now()) @db.Timestamp(6)
  update_time        DateTime?          @default(now()) @db.Timestamp(6)
  letter_name        String?            @db.VarChar
  photo_url          String?            @db.VarChar
  stock_category_id  Int?
  base_unit_id       Int?
  scm_goods_category scm_goods_category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_goods_category0")
  standard_units     standard_units?    @relation(fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  stock_category     stock_category?    @relation(fields: [stock_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_goods_stock_category_id_fkey")
}

model inventory_count {
  id                                                                                    String                     @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  type                                                                                  Int
  shop_id                                                                               Int?
  status                                                                                Int                        @default(0)
  count_amount                                                                          Decimal?                   @db.Decimal(12, 4)
  finished_at                                                                           DateTime?                  @db.Timestamp(6)
  created_at                                                                            DateTime                   @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at                                                                            DateTime                   @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  scm_shop                                                                              scm_shop?                  @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory_count_details                                                               inventory_count_details[]
  inventory_month_analysis_inventory_month_analysis_beginning_count_idToinventory_count inventory_month_analysis[] @relation("inventory_month_analysis_beginning_count_idToinventory_count")
  inventory_month_analysis_inventory_month_analysis_ending_count_idToinventory_count    inventory_month_analysis[] @relation("inventory_month_analysis_ending_count_idToinventory_count")
}

model inventory_count_details {
  id                 String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  hypo_qty           Decimal?        @db.Decimal(12, 4)
  count_qty          Decimal?        @db.Decimal(12, 4)
  weighted_price     Decimal         @db.Decimal(12, 4)
  supplier_item_id   String          @db.VarChar
  inventory_count_id String          @db.VarChar
  created_at         DateTime        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at         DateTime        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  count_value        Decimal?        @db.Decimal(12, 2)
  shop_id            Int?
  count_unit         String?         @db.VarChar
  base_qty_per_count Decimal?        @db.Decimal(12, 4)
  count_qty_base     Decimal?        @db.Decimal(14, 4)
  base_unit          String?         @db.VarChar
  is_count           Boolean?
  is_locked          Boolean         @default(false)
  balance_qty        Decimal?        @db.Decimal(12, 4)
  generic_item_id    Int?
  stock_category_id  Int?
  inventory_count    inventory_count @relation(fields: [inventory_count_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop           scm_shop?       @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_items     supplier_items  @relation(fields: [supplier_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory_ledger {
  id                    String                 @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  biz_type_id           Int
  source_id             String                 @db.VarChar
  source_detail_id      String                 @db.VarChar
  shop_id               Int
  brand_id              Int
  org_id                Int
  supplier_item_id      String                 @db.VarChar
  supplier_item_name    String                 @db.VarChar
  generic_item_id       Int
  generic_item_name     String                 @db.VarChar
  category_id           Int
  category_name         String                 @db.VarChar
  stock_id              Int?
  stock_name            String?                @db.VarChar
  base_unit_qty         Decimal                @db.Decimal(14, 4)
  base_unit             String                 @db.VarChar
  package_unit_qty      Decimal                @db.Decimal(14, 4)
  package_unit          String                 @db.VarChar
  price                 Decimal                @db.Decimal(12, 2)
  total_value           Decimal                @db.Decimal(12, 2)
  created_at            DateTime               @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at            DateTime               @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  storage_location_id   String?                @db.VarChar
  other_side_id         String?                @db.VarChar
  other_side_name       String?                @db.VarChar
  other_side_type       String?                @db.VarChar
  bill_id               String?                @db.VarChar
  biz_type_bill_id      Int?
  inventory_ledger_bill inventory_ledger_bill? @relation(fields: [bill_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  biz_type_bill         biz_type_bill?         @relation(fields: [biz_type_bill_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  biz_type              biz_type               @relation(fields: [biz_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop_brand        scm_shop_brand         @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  big_org               big_org                @relation(fields: [org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop              scm_shop               @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  storage_locations     storage_locations?     @relation(fields: [storage_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([source_id, source_detail_id])
}

model inventory_month_analysis {
  id                                                                           String           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  shop_id                                                                      Int
  month                                                                        String           @db.VarChar(50)
  beginning_value                                                              Decimal?         @db.Decimal(14, 2)
  ending_value                                                                 Decimal?         @db.Decimal(14, 2)
  beginning_count_id                                                           String?          @db.VarChar
  ending_count_id                                                              String?          @db.VarChar
  created_at                                                                   DateTime         @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at                                                                   DateTime         @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  inventory_count_inventory_month_analysis_beginning_count_idToinventory_count inventory_count? @relation("inventory_month_analysis_beginning_count_idToinventory_count", fields: [beginning_count_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory_count_inventory_month_analysis_ending_count_idToinventory_count    inventory_count? @relation("inventory_month_analysis_ending_count_idToinventory_count", fields: [ending_count_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop                                                                     scm_shop         @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, month])
}

model outbox_events {
  id             String    @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  aggregate_type String    @db.VarChar(255)
  aggregate_id   String    @db.VarChar(255)
  event_type     String    @db.VarChar(255)
  payload        Json
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  processed_at   DateTime? @db.Timestamp(6)
  published_at   DateTime? @db.Timestamp(6)
  retry_count    Int       @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model roles {
  id         Int       @id @default(autoincrement())
  role_name  String    @unique @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_goods_category {
  id            Int             @id @default(autoincrement())
  parent_id     Int             @default(0)
  name          String          @db.VarChar(16)
  phonetic      String          @db.VarChar(8)
  storage_id    Int?
  sort          Int             @default(0) @db.SmallInt
  status        Int             @default(1) @db.SmallInt
  level         Int?            @db.SmallInt
  serial_num    String?         @unique @db.VarChar
  generic_items generic_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop {
  shop_name                String                     @db.VarChar(60)
  serial_num               String?                    @db.VarChar(60)
  address                  String?                    @db.VarChar(200)
  longitude                String?                    @db.VarChar(60)
  latitude                 String?                    @db.VarChar(60)
  create_time              DateTime?                  @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  brand_id                 Int                        @db.SmallInt
  status                   Int                        @default(1) @db.SmallInt
  id                       Int                        @id @default(autoincrement())
  serial_num2              String?                    @db.VarChar
  business_id              Int?
  field                    Int?                       @default(0) @db.SmallInt
  field_order              Int?                       @default(0) @db.SmallInt
  is_join                  Int?                       @default(0) @db.SmallInt
  tc_shop_id               Int?                       @default(0)
  city_id                  Int?
  model_url                String?                    @db.VarChar
  automatic_receiving      Int                        @default(1) @db.SmallInt
  is_enabled               Boolean?                   @default(true)
  sales_plan_id            String?                    @db.VarChar
  big_org_id               Int?
  shop_pic_url             String?                    @db.VarChar
  client_tier_id           Int?
  open_hours               Json
  inventory_count          inventory_count[]
  inventory_count_details  inventory_count_details[]
  inventory_ledger         inventory_ledger[]
  inventory_ledger_bill    inventory_ledger_bill[]
  inventory_month_analysis inventory_month_analysis[]
  scm_shop_brand           scm_shop_brand             @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_brand_id38")
  big_org                  big_org?                   @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cities                   cities?                    @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_city_id_fkey71")
  client_tier              client_tier?               @relation(fields: [client_tier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_sales_plan            st_sales_plan?             @relation(fields: [sales_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_sales_plan_id_fkey83")
  storage_locations        storage_locations[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop_brand {
  id                                                             Int                     @id @default(autoincrement())
  brand_name                                                     String                  @db.VarChar(60)
  create_time                                                    DateTime?               @default(now()) @db.Timestamp(6)
  tcsl_id                                                        String?                 @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  big_org_id                                                     Int?                    @default(3)
  is_enabled                                                     Boolean?                @default(false)
  supply_plan_id                                                 Int?
  inventory_ledger                                               inventory_ledger[]
  inventory_ledger_bill                                          inventory_ledger_bill[]
  scm_shop                                                       scm_shop[]
  big_org                                                        big_org?                @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_brand_big_org_id_fkey80")
  scm_supply_plan_scm_shop_brand_supply_plan_idToscm_supply_plan scm_supply_plan?        @relation("scm_shop_brand_supply_plan_idToscm_supply_plan", fields: [supply_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_supply_plan_scm_supply_plan_brand_idToscm_shop_brand       scm_supply_plan[]       @relation("scm_supply_plan_brand_idToscm_shop_brand")
  st_sales_plan                                                  st_sales_plan[]

  @@index([tcsl_id], map: "idx_sc_shop_brand_tcsl_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_supply_plan {
  id                                                            Int              @id @default(autoincrement())
  name                                                          String?          @db.VarChar(60)
  serial_num                                                    String?          @unique @db.VarChar
  organization_id                                               Int?
  brand_id                                                      Int?
  scm_shop_brand_scm_shop_brand_supply_plan_idToscm_supply_plan scm_shop_brand[] @relation("scm_shop_brand_supply_plan_idToscm_supply_plan")
  scm_shop_brand_scm_supply_plan_brand_idToscm_shop_brand       scm_shop_brand?  @relation("scm_supply_plan_brand_idToscm_shop_brand", fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_sales_plan                                                 st_sales_plan[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model st_sales_plan {
  id                     String           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  priid                  String?          @db.VarChar
  code                   String?          @db.VarChar
  name                   String?          @db.VarChar
  isenable               Boolean?
  describe               String?          @db.VarChar
  sortorder              Int?
  isweeklimit            Boolean?
  isshiftlimit           Boolean?
  isdaylimit             Boolean?
  beginday               Decimal?         @db.Decimal
  endday                 Decimal?         @db.Decimal
  createshopid           Int?
  createshopname         String?          @db.VarChar
  saletypeid             Int?
  saletypename           String?          @db.VarChar
  brandid                Int?
  brandcode              String?          @db.VarChar
  brandname              String?          @db.VarChar
  enableprilocalpriceflg Boolean?
  iso2opriceplan         Boolean?
  ismultipriceplan       Boolean?
  istimelimit            Boolean?
  beginhour              Decimal?         @db.Decimal
  beginminute            Decimal?         @db.Decimal
  endhour                Decimal?         @db.Decimal
  endminute              Decimal?         @db.Decimal
  create_time            Decimal?         @db.Decimal
  modify_time            Decimal?         @db.Decimal
  delflg                 Int?
  belongshopid           Int?
  belongshopname         String?          @db.VarChar
  supply_plan_id         Int?
  scm_shop               scm_shop[]
  scm_shop_brand         scm_shop_brand?  @relation(fields: [brandid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_sales_plan_brandid_fkey79")
  scm_supply_plan        scm_supply_plan? @relation(fields: [supply_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model standard_units {
  id                   Int              @id @default(autoincrement())
  name                 String?          @db.VarChar(50)
  base_unit_id         Int?
  conversion_factor    Decimal?         @db.Decimal(12, 5)
  generic_items        generic_items[]
  standard_units       standard_units?  @relation("standard_unitsTostandard_units", fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_standard_units standard_units[] @relation("standard_unitsTostandard_units")
  supplier_items       supplier_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stock_category {
  id            Int             @id @default(autoincrement())
  name          String?         @db.VarChar(50)
  generic_items generic_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model supplier {
  id                    Int                     @id @default(autoincrement())
  supplier_name         String                  @db.VarChar(100)
  phone_number          String                  @db.VarChar(20)
  serial_num            String?                 @db.VarChar(100)
  settlement            Int?
  push_order            Int?
  is_first              Int?
  mail                  String?                 @db.VarChar(100)
  supplier_key          String?                 @db.VarChar(100)
  supplier_goods_url    String?                 @db.VarChar(100)
  brand_id              Int?
  brand_name            String?                 @db.VarChar
  organization_id       Int?
  organization_name     String?                 @db.VarChar
  delflg                Int?
  create_dept_id        Int?
  create_dept_name      String?                 @db.VarChar
  create_time           DateTime?               @db.Timestamp(6)
  create_id             String?                 @db.Uuid
  modify_time           DateTime?               @db.Timestamp(6)
  modify_id             String?                 @db.Uuid
  refresh_items_url     String?                 @db.VarChar
  get_items_url         String?                 @db.VarChar
  place_order_url       String?                 @db.VarChar
  auth_url              String?                 @db.VarChar
  access_id             String?                 @db.VarChar
  access_secret         String?                 @db.VarChar
  big_org_id            Int?
  callback_url          String?                 @db.VarChar
  big_org               big_org?                @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_items        supplier_items[]
  supplier_pull_records supplier_pull_records[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model supplier_items {
  id                         String                    @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name                       String                    @db.VarChar(60)
  status                     Int                       @default(1) @db.SmallInt
  create_time                DateTime?                 @default(now()) @db.Timestamp(6)
  update_time                DateTime?                 @default(now()) @db.Timestamp(6)
  letter_name                String?                   @db.VarChar
  supplier_id                Int?
  photo_url                  String?                   @db.VarChar
  price                      Decimal?                  @db.Decimal(12, 6)
  supplier_reference_id      String?                   @unique(map: "unique_supplier_reference_id") @db.VarChar
  cut_off_time               String?                   @db.VarChar
  package_unit_to_base_ratio Int?
  package_unit_name          String?                   @db.VarChar(50)
  base_unit_id               Int?
  city_id                    Int?
  weighing                   Int?
  tier_id                    Int
  category_name              String?                   @db.VarChar(50)
  supplier_item_category_id  Int?
  supplier_item_id           Int?
  inventory_count_details    inventory_count_details[]
  supplier                   supplier?                 @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_supplier_items_supplier")
  standard_units             standard_units?           @relation(fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cities                     cities?                   @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supplier_pull_records {
  id            String    @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  pull_version  String?   @db.VarChar
  is_successful Boolean?
  supplier_id   Int?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  supplier      supplier? @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model biz_type_bill {
  id                    Int                     @id @default(autoincrement())
  name                  String?                 @db.VarChar
  created_at            DateTime                @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at            DateTime                @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  biz_type              biz_type[]
  inventory_ledger      inventory_ledger[]
  inventory_ledger_bill inventory_ledger_bill[]
}

model storage_locations {
  id               String             @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name             String?            @db.VarChar
  shop_id          Int?
  storage_code     Int?               @unique
  created_at       DateTime           @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at       DateTime           @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  inventory_ledger inventory_ledger[]
  scm_shop         scm_shop?          @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory_ledger_bill {
  id               String             @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  biz_type_bill_id Int
  biz_type_id      Int
  source_id        String             @db.VarChar
  shop_id          Int
  brand_id         Int
  org_id           Int
  created_at       DateTime           @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at       DateTime           @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  inventory_ledger inventory_ledger[]
  biz_type_bill    biz_type_bill      @relation(fields: [biz_type_bill_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  biz_type         biz_type           @relation(fields: [biz_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop_brand   scm_shop_brand     @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  big_org          big_org            @relation(fields: [org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop         scm_shop           @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([biz_type_id, source_id])
}

enum pricing_strategy_type {
  cost
  margin
  custom
}

enum shop_item_price_event_type {
  order_in
  stock_count
  adjustment
}
