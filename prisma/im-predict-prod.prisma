generator client {
  provider = "prisma-client-js"
  output   = "./clients/im-predict-prod"
}

datasource db {
  provider = "postgresql"
  url      = env("IM_PREDICT_PROD_URL")
}

model current_inventory {
  id               String   @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  shop_id          Int
  generic_item_id  Int
  current_qty_base Decimal? @db.Decimal(14, 4)
  created_at       DateTime @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at       DateTime @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  scm_shop         scm_shop @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, generic_item_id], map: "shop_id_generic_item_id")
}

model day_info {
  id                             String                           @id @db.VarChar
  is_working                     Int?
  is_holiday                     Int?
  day_of_week                    Int?
  date                           DateTime?                        @db.Date
  st_predict_daily_sales         st_predict_daily_sales[]
  st_predict_daily_sales_details st_predict_daily_sales_details[]
}

model inventory_log {
  id               String               @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  shop_id          Int
  generic_item_id  Int
  delta_qty_base   Decimal              @db.Decimal(14, 4)
  type             inventory_event_type
  source_id        String               @db.VarChar
  created_at       DateTime             @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at       DateTime             @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  source_detail_id String?              @db.VarChar
  scm_shop         scm_shop             @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([source_id, source_detail_id])
}

model predict_supplier_order_details {
  id                         String                  @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  item_id                    Int
  price                      Decimal                 @db.Decimal(12, 2)
  order_qty                  Decimal                 @db.Decimal(12, 4)
  supplier_reference_id      String                  @db.VarChar
  package_unit_name          String                  @db.VarChar
  package_unit_to_base_ratio Int
  predict_order_id           String                  @db.VarChar
  supplier_item_name         String                  @db.VarChar
  supplier_item_photo        String                  @db.VarChar
  supplier_item_id           String?                 @db.VarChar
  total_order_amount         Decimal?                @default(dbgenerated("round((order_qty * price), 2)")) @db.Decimal(12, 2)
  stock_category_id          Int?
  updated_at                 DateTime?               @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  created_at                 DateTime?               @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  predict_supplier_orders    predict_supplier_orders @relation(fields: [predict_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([supplier_reference_id, predict_order_id], map: "predict_supplier_order_detail_supplier_reference_id_predict_key")
}

model predict_supplier_orders {
  id                             String                           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  shop_id                        Int?
  order_date                     String                           @db.VarChar(50)
  delivery_date                  String                           @db.VarChar(50)
  created_at                     DateTime                         @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at                     DateTime                         @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  predict_supplier_order_details predict_supplier_order_details[]
  scm_shop                       scm_shop?                        @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, order_date])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop {
  shop_name                      String                           @db.VarChar(60)
  status                         Int                              @default(1) @db.SmallInt
  id                             Int                              @id @default(autoincrement())
  current_inventory              current_inventory[]
  inventory_log                  inventory_log[]
  predict_supplier_orders        predict_supplier_orders[]
  st_predict_daily_sales         st_predict_daily_sales[]
  st_predict_daily_sales_details st_predict_daily_sales_details[]
}

model st_food_category {
  id           String         @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name         String?        @db.VarChar(60)
  brand_id     Int?
  is_enabled   Boolean?
  st_food_item st_food_item[]
}

model st_food_item {
  id                             String                           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name                           String?                          @db.VarChar(60)
  unit_name                      String?                          @db.VarChar(60)
  price                          Decimal?                         @db.Decimal
  category_id                    String?                          @db.VarChar
  brand_id                       Int?
  is_enabled                     Boolean?
  big_pic_url                    String?                          @db.VarChar
  ml_index                       Int?
  create_date                    DateTime?                        @db.Date
  is_package                     Boolean                          @default(false)
  st_food_category               st_food_category?                @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_food_item_category_id_fkey62")
  st_predict_daily_sales_details st_predict_daily_sales_details[]
}

model st_predict_daily_sales {
  id                             String                           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  day_info_id                    String?                          @db.VarChar
  predict_date                   DateTime?                        @db.Date
  is_confirmed                   Boolean?
  predicted_revenue              Decimal?                         @db.Decimal(12, 2)
  shop_id                        Int?
  day_info                       day_info?                        @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_day_info_id_fkey99")
  scm_shop                       scm_shop?                        @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_shop_id_fkey101")
  st_predict_daily_sales_details st_predict_daily_sales_details[]

  @@unique([day_info_id, shop_id], map: "unique_day_shop")
}

model st_predict_daily_sales_details {
  id                     String                  @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  predict_date           DateTime?               @db.Date
  day_info_id            String?                 @db.VarChar
  shop_id                Int?
  food_item_id           String?                 @db.VarChar
  price                  Decimal?                @db.Decimal(6, 2)
  unit_name              String?                 @db.VarChar
  predicted_qty          Int?
  actual_qty             Int?
  appearances            Int?
  is_predicted           Boolean?
  predict_daily_sales_id String?                 @db.VarChar
  item_total             Decimal?                @db.Decimal(12, 2)
  st_predict_daily_sales st_predict_daily_sales? @relation(fields: [predict_daily_sales_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "_daily_sales_details_predict_daily_sales_id_fkey100")
  day_info               day_info?               @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_details_day_info_id_fkey98")
  st_food_item           st_food_item?           @relation(fields: [food_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_details_food_item_id_fkey97")
  scm_shop               scm_shop?               @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_details_shop_id_fkey96")

  @@unique([day_info_id, shop_id, food_item_id], map: "unique_day_shop_food")
}

enum inventory_event_type {
  order_in
  sale_out
  return_out
  stock_count
}
