generator client {
  provider = "prisma-client-js"
  output   = "./clients/im"
}

datasource db {
  provider = "postgresql"
  url      = env("IM_DATABASE_URL")
}

model big_org {
  id                Int                 @id @default(autoincrement())
  name              String?             @db.VarChar
  access_id         String?             @db.VarChar
  access_secret     String?             @db.VarChar
  scm_order         scm_order[]
  scm_order_details scm_order_details[]
  scm_shop          scm_shop[]
  scm_shop_account  scm_shop_account[]
  scm_shop_brand    scm_shop_brand[]
}

model cities {
  id       String     @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name     String?    @unique(map: "unique_city_name") @db.VarChar
  scm_shop scm_shop[]
}

model day_info {
  id                             String                           @id @db.VarChar
  is_working                     Int?
  is_holiday                     Int?
  day_of_week                    Int?
  date                           DateTime?                        @db.Date
  scm_order                      scm_order[]
  scm_predict_order              scm_predict_order[]
  st_daily_count                 st_daily_count[]
  st_daily_sales                 st_daily_sales[]
  st_inventory_single            st_inventory_single[]
  st_predict_daily_sales         st_predict_daily_sales[]
  st_predict_daily_sales_details st_predict_daily_sales_details[]
  st_predict_order               st_predict_order[]
  st_predict_order_details       st_predict_order_details[]
  temp_inventory_analysis        temp_inventory_analysis[]
}

model scm_good_units {
  id                                                                                       String                      @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  goods_id                                                                                 Int?
  ratio_to_base                                                                            Decimal                     @db.Decimal
  is_base_unit                                                                             Boolean?                    @default(false)
  is_order_unit                                                                            Boolean?                    @default(false)
  name                                                                                     String?                     @db.VarChar
  is_count_unit                                                                            Boolean?                    @default(false)
  supply_plan_goods_id                                                                     String?                     @db.VarChar
  scm_good_pricing                                                                         scm_good_pricing[]
  scm_goods_scm_good_units_goods_idToscm_goods                                             scm_goods?                  @relation("scm_good_units_goods_idToscm_goods", fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "goods_fk")
  scm_supply_plan_scm_goods_scm_good_units_supply_plan_goods_idToscm_supply_plan_scm_goods scm_supply_plan_scm_goods?  @relation("scm_good_units_supply_plan_goods_idToscm_supply_plan_scm_goods", fields: [supply_plan_goods_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  scm_goods_scm_goods_base_good_unit_idToscm_good_units                                    scm_goods[]                 @relation("scm_goods_base_good_unit_idToscm_good_units")
  scm_goods_scm_goods_count_good_unit_idToscm_good_units                                   scm_goods[]                 @relation("scm_goods_count_good_unit_idToscm_good_units")
  scm_goods_scm_goods_order_good_unit_idToscm_good_units                                   scm_goods[]                 @relation("scm_goods_order_good_unit_idToscm_good_units")
  scm_goods_scm_goods_purchase_good_unit_idToscm_good_units                                scm_goods[]                 @relation("scm_goods_purchase_good_unit_idToscm_good_units")
  scm_supply_plan_scm_goods_scm_supply_plan_scm_goods_base_unit_idToscm_good_units         scm_supply_plan_scm_goods[] @relation("scm_supply_plan_scm_goods_base_unit_idToscm_good_units")
  scm_supply_plan_scm_goods_scm_supply_plan_scm_goods_count_unit_idToscm_good_units        scm_supply_plan_scm_goods[] @relation("scm_supply_plan_scm_goods_count_unit_idToscm_good_units")
  scm_supply_plan_scm_goods_scm_supply_plan_scm_goods_good_unit_idToscm_good_units         scm_supply_plan_scm_goods[] @relation("scm_supply_plan_scm_goods_good_unit_idToscm_good_units")
  scm_supply_plan_scm_goods_scm_supply_plan_scm_goods_order_unit_idToscm_good_units        scm_supply_plan_scm_goods[] @relation("scm_supply_plan_scm_goods_order_unit_idToscm_good_units")
  st_daily_count_items_st_daily_count_items_good_unit_idToscm_good_units                   st_daily_count_items[]      @relation("st_daily_count_items_good_unit_idToscm_good_units")
  st_daily_count_items_st_daily_count_items_unit_idToscm_good_units                        st_daily_count_items[]      @relation("st_daily_count_items_unit_idToscm_good_units")
  st_ingredient                                                                            st_ingredient[]
  st_inventory_count                                                                       st_inventory_count[]
  st_safe_store_goods                                                                      st_safe_store_goods[]

  @@unique([goods_id, ratio_to_base], map: "unique_good_id_ratio_to_base")
  @@unique([supply_plan_goods_id, ratio_to_base], map: "scm_good_ratio")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_goods {
  id                                                             Int                              @id @default(autoincrement())
  name                                                           String                           @db.VarChar(60)
  category_id                                                    Int
  serial_num                                                     String?                          @db.VarChar(60)
  details                                                        String?
  sort                                                           Int                              @default(0) @db.SmallInt
  status                                                         Int                              @default(1) @db.SmallInt
  create_time                                                    DateTime?                        @default(now()) @db.Timestamp(6)
  update_time                                                    DateTime?                        @db.Timestamp(6)
  stock_id                                                       Int?                             @db.SmallInt
  sort_cate_id                                                   Int?                             @db.SmallInt
  tt_code                                                        String?                          @db.VarChar
  organization_id                                                Int?
  letter_name                                                    String?                          @db.VarChar
  weighing                                                       Int?                             @default(0) @db.SmallInt
  supplier_id                                                    Int?
  goods_price_id                                                 Int?
  remarks                                                        String?                          @db.VarChar
  direct                                                         Int?                             @default(1) @db.SmallInt
  seller_id                                                      Int?
  supplier_sorting                                               Int?                             @default(0) @db.SmallInt
  s_day                                                          Int?                             @default(0) @db.SmallInt
  e_day                                                          Int?                             @default(0) @db.SmallInt
  sorting                                                        Int?                             @default(0)
  base_unit_id                                                   String?                          @db.VarChar
  photo_url                                                      String?                          @db.VarChar
  is_count                                                       Boolean?                         @default(true)
  base_good_unit_id                                              String?                          @db.VarChar
  order_good_unit_id                                             String?                          @db.VarChar
  spec_text                                                      String?                          @db.VarChar
  util_id                                                        Int?
  price                                                          Decimal?                         @db.Decimal(12, 6)
  storage_unit                                                   String?                          @db.VarChar
  storage_sale_ratio                                             Int?
  count_good_unit_id                                             String?                          @db.VarChar
  purchase_good_unit_id                                          String?                          @db.VarChar
  is_public                                                      Boolean                          @default(true)
  private_client_goods                                           private_client_goods[]
  scm_bulk_picking_routes                                        scm_bulk_picking_routes[]
  scm_good_pricing                                               scm_good_pricing[]
  scm_good_units_scm_good_units_goods_idToscm_goods              scm_good_units[]                 @relation("scm_good_units_goods_idToscm_goods")
  scm_good_units_scm_goods_base_good_unit_idToscm_good_units     scm_good_units?                  @relation("scm_goods_base_good_unit_idToscm_good_units", fields: [base_good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_good_base_unit90")
  scm_good_units_scm_goods_count_good_unit_idToscm_good_units    scm_good_units?                  @relation("scm_goods_count_good_unit_idToscm_good_units", fields: [count_good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_good_count_unit01")
  scm_good_units_scm_goods_order_good_unit_idToscm_good_units    scm_good_units?                  @relation("scm_goods_order_good_unit_idToscm_good_units", fields: [order_good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_good_order_unit108")
  scm_goods_category                                             scm_goods_category               @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_goods_category0")
  scm_stock                                                      scm_stock?                       @relation(fields: [stock_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_scm_goods_scm_stock124")
  scm_util                                                       scm_util?                        @relation(fields: [util_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_scm_goods_util")
  scm_good_units_scm_goods_purchase_good_unit_idToscm_good_units scm_good_units?                  @relation("scm_goods_purchase_good_unit_idToscm_good_units", fields: [purchase_good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_goods_brand                                                scm_goods_brand[]
  scm_goods_img                                                  scm_goods_img[]
  scm_hide_price                                                 scm_hide_price[]
  scm_inventory_detail                                           scm_inventory_detail[]
  scm_order_details                                              scm_order_details[]
  scm_price_plan_scm_goods                                       scm_price_plan_scm_goods[]
  scm_return_goods                                               scm_return_goods[]
  scm_storage_position_scm_goods                                 scm_storage_position_scm_goods[]
  scm_supplier_price_plan                                        scm_supplier_price_plan[]
  scm_suppliers_goods_daily                                      scm_suppliers_goods_daily[]
  scm_supply_plan_scm_goods                                      scm_supply_plan_scm_goods[]
  st_daily_count_items                                           st_daily_count_items[]
  st_ingredient                                                  st_ingredient[]
  st_inventory_items                                             st_inventory_items[]
  st_kitchen_department_goods                                    st_kitchen_department_goods[]
  st_predict_order_details                                       st_predict_order_details[]

  @@index([category_id], map: "idx_scm_goods_category_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_order {
  id                   Int                 @id @default(autoincrement())
  shop_id              Int
  delivery_time        DateTime            @db.Timestamp(6)
  address              String?             @db.VarChar(200)
  status               Int                 @default(0) @db.SmallInt
  create_time          DateTime?           @default(now()) @db.Timestamp(6)
  update_time          DateTime?           @default(now()) @db.Timestamp(6)
  remarks              String?             @db.VarChar
  receival_time        DateTime?           @db.Timestamp(6)
  delivery_day_info_id String?             @db.VarChar
  reference_id         String?             @db.VarChar
  supplier_org_id      Int?
  day_info             day_info?           @relation(fields: [delivery_day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop             scm_shop            @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_order_shop_id_fkey2")
  big_org              big_org?            @relation(fields: [supplier_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_order_details    scm_order_details[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_order_details {
  id                        Int                        @id @default(autoincrement())
  goods_name                String?                    @db.VarChar(60)
  num                       Decimal                    @db.Decimal
  price                     Decimal                    @db.Decimal(12, 6)
  spec_text                 String?                    @db.VarChar(60)
  ratio                     Int?
  status                    Int                        @default(0) @db.SmallInt
  order_id                  Int?
  create_time               DateTime?                  @default(now()) @db.Timestamp(6)
  total_price               Decimal?                   @db.Decimal(12, 6)
  sale_unit                 String?                    @db.VarChar(10)
  goods_id                  Int?
  delivery_qty              Decimal?                   @default(0) @db.Decimal(10, 2)
  letter_name               String?                    @db.VarChar
  spg_id                    String?                    @db.VarChar
  pg_id                     Int?
  reference_id              String?                    @db.VarChar
  supplier_org_id           Int?
  scm_goods                 scm_goods?                 @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_order_details_goods_id_fkey44")
  scm_order                 scm_order?                 @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_order_details_order_id_fkey43")
  scm_supply_plan_scm_goods scm_supply_plan_scm_goods? @relation(fields: [spg_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  big_org                   big_org?                   @relation(fields: [supplier_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([order_id], map: "idx_scm_order_details_order_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop {
  shop_name                      String                           @db.VarChar(60)
  serial_num                     String?                          @db.VarChar(60)
  address                        String?                          @db.VarChar(200)
  longitude                      String?                          @db.VarChar(60)
  latitude                       String?                          @db.VarChar(60)
  create_time                    DateTime?                        @db.Timestamp(6)
  brand_id                       Int                              @db.SmallInt
  status                         Int                              @default(1) @db.SmallInt
  supply_plan_id                 Int?
  id                             Int                              @id @default(autoincrement())
  serial_num2                    String?                          @db.VarChar
  business_id                    Int?
  field                          Int?                             @default(0) @db.SmallInt
  field_order                    Int?                             @default(0) @db.SmallInt
  is_join                        Int?                             @default(0) @db.SmallInt
  tc_shop_id                     Int?                             @default(0)
  city_id                        String?                          @db.VarChar
  ingredient_type_id             String?                          @db.VarChar
  model_url                      String?                          @db.VarChar
  automatic_receiving            Int                              @default(1) @db.SmallInt
  is_enabled                     Boolean?                         @default(true)
  sales_plan_id                  String?                          @db.VarChar
  client_tier_id                 Int?
  client_organization_id         Int?
  big_org_id                     Int?
  scm_admin_group_scm_shop       scm_admin_group_scm_shop[]
  scm_order                      scm_order[]
  scm_predict_order              scm_predict_order[]
  scm_shop_brand                 scm_shop_brand                   @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_brand_id38")
  big_org                        big_org?                         @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cities                         cities?                          @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_city_id_fkey71")
  client_organizations           client_organizations?            @relation(fields: [client_organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop                       scm_shop?                        @relation("scm_shopToscm_shop", fields: [client_tier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_scm_shop                 scm_shop[]                       @relation("scm_shopToscm_shop")
  st_ingredient_types            st_ingredient_types?             @relation(fields: [ingredient_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_ingredient_type_id_fkey72")
  st_sales_plan                  st_sales_plan?                   @relation(fields: [sales_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_sales_plan_id_fkey83")
  scm_supply_plan                scm_supply_plan?                 @relation(fields: [supply_plan_id], references: [id], onDelete: Cascade, map: "scm_shop_supply_plan_id_fkey13")
  scm_shop_scm_shop_account      scm_shop_scm_shop_account[]
  st_daily_count                 st_daily_count[]
  st_daily_sales                 st_daily_sales[]
  st_food_item_copy_on           st_food_item_copy_on[]
  st_inventory_single            st_inventory_single[]
  st_kitchen_department          st_kitchen_department[]
  st_predict_daily_sales         st_predict_daily_sales[]
  st_predict_daily_sales_details st_predict_daily_sales_details[]
  st_predict_order               st_predict_order[]
  st_predict_order_details       st_predict_order_details[]
  st_safe_store_goods            st_safe_store_goods[]
  st_shop_section                st_shop_section[]
  st_shop_table                  st_shop_table[]
  temp_inventory_analysis        temp_inventory_analysis[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop_account {
  id                        Int                         @id @default(autoincrement())
  moniker                   String?                     @db.VarChar
  mobile                    String?                     @unique(map: "uniq_mobile") @db.VarChar(16)
  password                  String?                     @db.VarChar(60)
  role_type                 Int                         @default(0) @db.SmallInt
  last_login                DateTime?                   @db.Timestamp(6)
  create_time               DateTime?                   @db.Timestamp(6)
  status                    Int                         @default(1) @db.SmallInt
  organization_id           Int?
  serial_num                String?                     @unique @db.VarChar
  created_at                DateTime?                   @default(now()) @db.Timestamp(6)
  big_org_id                Int?
  scm_brand_account         scm_brand_account[]
  big_org                   big_org?                    @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_organization          scm_organization?           @relation(fields: [organization_id], references: [id], onDelete: Cascade, map: "scm_shop_account_organization_id_fkey10")
  scm_shop_scm_shop_account scm_shop_scm_shop_account[]
  st_inventory_count        st_inventory_count[]
  st_inventory_single       st_inventory_single[]
  user_roles                user_roles[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop_brand {
  id                      Int                       @id @default(autoincrement())
  brand_name              String                    @db.VarChar(60)
  create_time             DateTime?                 @default(now()) @db.Timestamp(6)
  organization_id         Int?
  tcsl_id                 String?                   @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  big_org_id              Int?                      @default(3)
  is_enabled              Boolean?                  @default(false)
  scm_brand_account       scm_brand_account[]
  scm_goods_brand         scm_goods_brand[]
  scm_shop                scm_shop[]
  big_org                 big_org?                  @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_brand_big_org_id_fkey80")
  scm_organization        scm_organization?         @relation(fields: [organization_id], references: [id], onDelete: Cascade, map: "scm_shop_brand_organization_id_fkey14")
  scm_supply_plan         scm_supply_plan[]
  st_daily_sales          st_daily_sales[]
  st_food_category        st_food_category[]
  st_food_item            st_food_item[]
  st_food_item_copy_on    st_food_item_copy_on[]
  st_ingredient           st_ingredient[]
  st_ingredient_types     st_ingredient_types[]
  st_kitchen_department   st_kitchen_department[]
  st_sales_plan           st_sales_plan[]
  temp_inventory_analysis temp_inventory_analysis[]

  @@index([tcsl_id], map: "idx_sc_shop_brand_tcsl_id")
}

model scm_shop_scm_shop_account {
  shop_account_id  Int
  shop_id          Int
  id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  scm_shop_account scm_shop_account @relation(fields: [shop_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_scm_shop_account_shop_account_id_fkey8")
  scm_shop         scm_shop         @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_scm_shop_account_shop_id_fkey26")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_supply_plan {
  id                        Int                         @id @default(autoincrement())
  name                      String?                     @db.VarChar(60)
  serial_num                String?                     @unique @db.VarChar
  organization_id           Int?
  price_plan_id             Int?
  brand_id                  Int?
  city                      String?                     @db.VarChar
  scm_shop                  scm_shop[]
  scm_price_plan            scm_price_plan?             @relation(fields: [price_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "price_plan_id_fk35")
  scm_shop_brand            scm_shop_brand?             @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_supply_plan_brand_id_fkey29")
  scm_supply_plan_scm_goods scm_supply_plan_scm_goods[]
  st_ingredient             st_ingredient[]
  st_ingredient_types       st_ingredient_types[]
  st_sales_plan             st_sales_plan[]
}

model scm_supply_plan_scm_goods {
  supply_plan_id                                                                Int?
  good_id                                                                       Int?
  id                                                                            String                        @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  price                                                                         Decimal?                      @db.Decimal(12, 6)
  stock_id                                                                      Int?
  is_enabled                                                                    Boolean?                      @default(true)
  status                                                                        Int?                          @default(1) @db.SmallInt
  good_unit_id                                                                  String?                       @db.VarChar
  is_predict                                                                    Boolean?                      @default(false)
  stock_category_id                                                             Int?
  photo_url                                                                     String?                       @db.VarChar
  order_unit_id                                                                 String?                       @db.VarChar
  base_unit_id                                                                  String?                       @db.VarChar
  count_unit_id                                                                 String?                       @db.VarChar
  goods_name                                                                    String?                       @db.VarChar(100)
  letter_name                                                                   String?                       @db.VarChar
  category_id                                                                   Int?
  category_name                                                                 String?                       @db.VarChar
  sold_time                                                                     String?                       @db.VarChar(50)
  reference_id                                                                  String?                       @db.VarChar
  scm_good_units_scm_good_units_supply_plan_goods_idToscm_supply_plan_scm_goods scm_good_units[]              @relation("scm_good_units_supply_plan_goods_idToscm_supply_plan_scm_goods")
  scm_order_details                                                             scm_order_details[]
  scm_good_units_scm_supply_plan_scm_goods_base_unit_idToscm_good_units         scm_good_units?               @relation("scm_supply_plan_scm_goods_base_unit_idToscm_good_units", fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_good_units_scm_supply_plan_scm_goods_count_unit_idToscm_good_units        scm_good_units?               @relation("scm_supply_plan_scm_goods_count_unit_idToscm_good_units", fields: [count_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_goods                                                                     scm_goods?                    @relation(fields: [good_id], references: [id], onDelete: Cascade, map: "scm_supply_plan_scm_goods_good_id_fkey12")
  scm_good_units_scm_supply_plan_scm_goods_good_unit_idToscm_good_units         scm_good_units?               @relation("scm_supply_plan_scm_goods_good_unit_idToscm_good_units", fields: [good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_supply_plan_scm_goods_good_unit_id_fkey92")
  scm_good_units_scm_supply_plan_scm_goods_order_unit_idToscm_good_units        scm_good_units?               @relation("scm_supply_plan_scm_goods_order_unit_idToscm_good_units", fields: [order_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  stock_category                                                                stock_category?               @relation(fields: [stock_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_supply_plan                                                               scm_supply_plan?              @relation(fields: [supply_plan_id], references: [id], onDelete: Cascade, map: "scm_supply_plan_scm_goods_supply_plan_id_fkey11")
  st_daily_count_items                                                          st_daily_count_items[]
  st_ingredient                                                                 st_ingredient[]
  st_inventory_detail                                                           st_inventory_detail[]
  st_kitchen_department_goods                                                   st_kitchen_department_goods[]
  st_predict_order_details                                                      st_predict_order_details[]
  st_safe_store_goods                                                           st_safe_store_goods[]

  @@unique([supply_plan_id, good_id], map: "constraint_name")
  @@unique([supply_plan_id, good_id], map: "unique_supply_plan_goods")
}

model st_bill_list {
  daily_sales_id               String?         @db.VarChar
  bs_id                        String          @id @db.VarChar(50)
  bs_code                      String?         @db.VarChar(255)
  ts_code                      String?         @db.VarChar(255)
  owo_open_id                  String?         @db.VarChar(255)
  owo_union_id                 String?         @db.VarChar(255)
  btpw_user_account            String?         @db.VarChar(255)
  area_code                    String?         @db.VarChar(50)
  area_id                      String?         @db.VarChar
  area_name                    String?         @db.VarChar(255)
  point_code                   String?         @db.VarChar(255)
  point_name                   String?         @db.VarChar(255)
  people_qty                   Int?
  open_time                    DateTime?       @db.Timestamp(6)
  settle_time                  DateTime?       @db.Timestamp(6)
  settleman_id                 String?         @db.VarChar(50)
  settleman_name               String?         @db.VarChar(255)
  settle_shift_id              String?         @db.VarChar(50)
  settle_biz_date              DateTime?       @db.Date
  settle_biz_month             String?         @db.VarChar(7)
  state                        String?         @db.VarChar(10)
  trt_user_id                  String?         @db.VarChar(50)
  waiter_code                  String?         @db.VarChar(50)
  waiter_name                  String?         @db.VarChar(255)
  trt_salesman_id              String?         @db.VarChar(50)
  salesman_code                String?         @db.VarChar(50)
  salesman_name                String?         @db.VarChar(255)
  item_income_total            Decimal?        @db.Decimal(10, 4)
  item_orig_money              Decimal?        @db.Decimal(10, 4)
  orig_server_fee              Decimal?        @db.Decimal(10, 4)
  orig_zdxfbq                  Decimal?        @db.Decimal(10, 4)
  orig_total                   Decimal?        @db.Decimal(10, 4)
  disc_total                   Decimal?        @db.Decimal(10, 4)
  disc_money                   Decimal?        @db.Decimal(10, 4)
  quota_money                  Decimal?        @db.Decimal(10, 4)
  present_money                Decimal?        @db.Decimal(10, 4)
  member_money                 Decimal?        @db.Decimal(10, 4)
  promote_money                Decimal?        @db.Decimal(10, 4)
  wipe_money                   Decimal?        @db.Decimal(10, 4)
  income_total                 Decimal?        @db.Decimal(10, 4)
  not_income_money             Decimal?        @db.Decimal(10, 4)
  sale_type_id                 Int?
  sale_type_name               String?         @db.VarChar(255)
  order_origin_id              Int?
  order_origin_name            String?         @db.VarChar(255)
  dinner_type_id               Int?
  dinner_type_name             String?         @db.VarChar(255)
  settle_state                 String?         @db.VarChar(50)
  order_type                   String?         @db.VarChar(10)
  de_from                      String?         @db.VarChar(10)
  is_continued_bill            Boolean?
  is_continued_bill_name       String?         @db.VarChar(50)
  tax_money                    Decimal?        @db.Decimal(10, 4)
  order_code                   String?         @db.VarChar(255)
  center_code                  String?         @db.VarChar(255)
  center_name                  String?         @db.VarChar(255)
  brand_code                   String?         @db.VarChar(50)
  brand_name                   String?         @db.VarChar(255)
  shop_code                    String?         @db.VarChar(50)
  shop_id                      Int?
  shop_out_code                String?         @db.VarChar(255)
  shop_name                    String?         @db.VarChar(255)
  last_total                   Decimal?        @db.Decimal(10, 4)
  is_give_invoice              String?         @db.VarChar(10)
  invoice_no                   String?         @db.VarChar(255)
  invoice_code                 String?         @db.VarChar(255)
  invoice_remark               String?         @db.VarChar(255)
  create_time                  DateTime?       @db.Timestamp(6)
  modify_time                  DateTime?       @db.Timestamp(6)
  bs_remark                    String?
  team_id                      String?         @db.VarChar(255)
  pos_id                       String?         @db.VarChar(50)
  pos_code                     String?         @db.VarChar(50)
  pos_name                     String?         @db.VarChar(255)
  orig_wd_bs_id                String?         @db.VarChar(255)
  orig_wd_bs_code              String?         @db.VarChar(255)
  accountbillstate             Int?
  sn                           String?         @db.VarChar(50)
  give_change                  Decimal?        @db.Decimal(10, 4)
  de_no                        String?         @db.VarChar(50)
  delivery_time                DateTime?       @db.Timestamp(6)
  service_fee                  Decimal?        @db.Decimal(10, 4)
  gde_member_id                String?         @db.VarChar(255)
  member_card_no               String?         @db.VarChar(255)
  member_id                    String?         @db.VarChar(255)
  member_name                  String?         @db.VarChar(255)
  member_mobile                String?         @db.VarChar(255)
  card_kind_name               String?         @db.VarChar(255)
  service_fee_income_money     Decimal?        @db.Decimal(10, 4)
  service_fee_not_income_money Decimal?        @db.Decimal(10, 4)
  service_fee_last_total       Decimal?        @db.Decimal(10, 4)
  zdxf_income_money            Decimal?        @db.Decimal(10, 4)
  third_serial                 String?         @db.VarChar(255)
  table_qty                    Int?
  crm_ts_code                  String?         @db.VarChar(255)
  third_member_id              String?         @db.VarChar(255)
  third_member_mobile          String?         @db.VarChar(255)
  children_qty                 Int?
  delflg                       Int?
  st_daily_sales               st_daily_sales? @relation(fields: [daily_sales_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_bill_list_daily_sales_id_fkey126")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model st_daily_count {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  shop_id              Int?
  date_string          String?                @db.VarChar
  date                 DateTime?              @db.Date
  inventory_value      Decimal?               @db.Decimal(12, 2)
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?              @default(now()) @db.Timestamptz(6)
  day_info             day_info?              @relation(fields: [date_string], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop             scm_shop?              @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_daily_count_items st_daily_count_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model st_daily_count_items {
  id                                                               String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  good_id                                                          Int?
  supply_plan_good_id                                              String?                    @db.VarChar
  count_id                                                         String?                    @db.Uuid
  good_unit_id                                                     String?                    @db.VarChar
  price                                                            Decimal?                   @db.Decimal(12, 2)
  hypo_count                                                       Decimal?                   @db.Decimal(12, 2)
  real_hypo_count                                                  Decimal?                   @db.Decimal(12, 2)
  actual_count                                                     Decimal?                   @db.Decimal(12, 2)
  created_at                                                       DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at                                                       DateTime?                  @default(now()) @db.Timestamptz(6)
  unit_id                                                          String?                    @db.VarChar
  st_daily_count                                                   st_daily_count?            @relation(fields: [count_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_goods                                                        scm_goods?                 @relation(fields: [good_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_good_units_st_daily_count_items_good_unit_idToscm_good_units scm_good_units?            @relation("st_daily_count_items_good_unit_idToscm_good_units", fields: [good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_supply_plan_scm_goods                                        scm_supply_plan_scm_goods? @relation(fields: [supply_plan_good_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_good_units_st_daily_count_items_unit_idToscm_good_units      scm_good_units?            @relation("st_daily_count_items_unit_idToscm_good_units", fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model st_daily_sales {
  id                    String                  @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  date                  DateTime?               @db.Date
  shop_id               Int?
  brand_id              Int?
  date_string           String?                 @db.VarChar
  dayofweek             Int?
  st_bill_list          st_bill_list[]
  day_info              day_info?               @relation(fields: [date_string], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "day_info_fk40")
  scm_shop_brand        scm_shop_brand?         @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_daily_sales_brand_id_fkey67")
  scm_shop              scm_shop?               @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_daily_sales_shop_id_fkey66")
  st_daily_sales_detail st_daily_sales_detail[]
  st_settle_details     st_settle_details[]

  @@unique([shop_id, date_string], map: "unique_date_string_shop_id")
  @@index([date, shop_id], map: "idx_st_daily_sales_date_shop_id")
}

model st_daily_sales_detail {
  id               String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  daily_sales_id   String?         @db.VarChar
  bs_id            String?         @db.VarChar
  qty              Decimal?        @db.Decimal
  item_id          String?         @db.VarChar
  sale_price       Decimal?        @db.Decimal
  orig_price       Decimal?        @db.Decimal(12, 4)
  orig_qty         Decimal?        @db.Decimal(12, 4)
  create_time      DateTime?       @db.Timestamp(6)
  delflg           Int?
  small_class_id   String?         @db.VarChar
  unit_name        String?         @db.VarChar
  not_income_money Decimal?        @db.Decimal(12, 4)
  unit_id          String?         @db.VarChar
  item_name        String?         @db.VarChar
  small_class_name String?         @db.VarChar
  last_price       Decimal?        @db.Decimal(12, 4)
  orig_subtotal    Decimal?        @db.Decimal(12, 4)
  income_money     Decimal?        @db.Decimal(12, 4)
  settle_time      DateTime?       @db.Timestamp(6)
  pkg_flg          Int?
  st_daily_sales   st_daily_sales? @relation(fields: [daily_sales_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_daily_sales_detail_daily_sales_id_fkey6987")
  st_food_item     st_food_item?   @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_daily_sales_detail_item_id_fkey6836")

  @@index([daily_sales_id, item_id], map: "idx_st_daily_sales_detail_daily_sales_id_item_id")
}

model st_food_category {
  id             String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name           String?         @db.VarChar(60)
  brand_id       Int?
  is_enabled     Boolean?
  scm_shop_brand scm_shop_brand? @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_food_category_brand_id_fkey64")
  st_food_item   st_food_item[]
}

model st_food_item {
  id                             String                           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name                           String?                          @db.VarChar(60)
  unit_name                      String?                          @db.VarChar(60)
  price                          Decimal?                         @db.Decimal
  category_id                    String?                          @db.VarChar
  brand_id                       Int
  is_enabled                     Boolean?
  big_pic_url                    String?                          @db.VarChar
  ml_index                       Int?
  create_date                    DateTime?                        @db.Date
  is_package                     Boolean                          @default(false)
  st_daily_sales_detail          st_daily_sales_detail[]
  scm_shop_brand                 scm_shop_brand                   @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_food_item_brand_id_fkey63")
  st_food_category               st_food_category?                @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_food_item_category_id_fkey62")
  st_ingredient                  st_ingredient[]
  st_predict_daily_sales_details st_predict_daily_sales_details[]
  st_sales_plan_items            st_sales_plan_items[]
}

model st_ingredient {
  id                        Int                       @id @default(autoincrement())
  food_item_id              String?                   @db.VarChar
  qty                       Decimal?                  @db.Decimal
  yield_pct                 Decimal?                  @db.Decimal
  goods_id                  Int?
  brand_id                  Int
  order_column              Int?
  sales_plan_id             String                    @db.VarChar
  supply_plan_id            Int
  supply_plan_good_id       String                    @db.VarChar
  sales_plan_item_id        String                    @db.VarChar
  good_unit_id              String?                   @db.VarChar
  scm_shop_brand            scm_shop_brand            @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_ingredient_brand_id_fkey73")
  st_food_item              st_food_item?             @relation(fields: [food_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "st_ingredient_food_item_id_fkey61")
  scm_good_units            scm_good_units?           @relation(fields: [good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_goods                 scm_goods?                @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_ingredient_goods_id_fkey65")
  st_sales_plan             st_sales_plan             @relation(fields: [sales_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_ingredient_sales_plan_id_fkey95")
  st_sales_plan_items       st_sales_plan_items       @relation(fields: [sales_plan_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  scm_supply_plan_scm_goods scm_supply_plan_scm_goods @relation(fields: [supply_plan_good_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_ingredient_supply_plan_good_id_fkey93")
  scm_supply_plan           scm_supply_plan           @relation(fields: [supply_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_ingredient_supply_plan_id_fkey94")

  @@unique([goods_id, food_item_id, sales_plan_id, supply_plan_id], map: "unique_food_goods_sales_plan")
  @@unique([sales_plan_item_id, supply_plan_good_id], map: "unique_sales_item_supply_item")
  @@index([food_item_id, sales_plan_id, supply_plan_id], map: "idx_st_ingredient_food_item_id_sales_plan_id_supply_plan_id")
}

model st_inventory_detail {
  id                        Int                        @id @default(autoincrement())
  single_id                 Int?
  goods_name                String?                    @db.VarChar(60)
  qty                       Decimal                    @db.Decimal(10, 2)
  inventory_qty             Decimal?                   @default(0) @db.Decimal(10, 2)
  user_id                   Int?
  price                     Decimal?                   @db.Decimal(12, 6)
  sale_unit                 String?                    @db.VarChar(10)
  letter_name               String?                    @db.VarChar
  balance_qty               Decimal?                   @default(0) @db.Decimal(10, 2)
  balance_price             Decimal?                   @db.Decimal(12, 6)
  overage_qty               Decimal?                   @db.Decimal(12, 2)
  use_qty                   Decimal?                   @db.Decimal(12, 4)
  inventory_total_price     Decimal?                   @db.Decimal
  use_total_price           Decimal?                   @db.Decimal(12, 2)
  spg_id                    String?                    @db.VarChar
  st_inventory_single       st_inventory_single?       @relation(fields: [single_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_single_id74")
  scm_supply_plan_scm_goods scm_supply_plan_scm_goods? @relation(fields: [spg_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model st_inventory_single {
  id                      Int                       @id @default(autoincrement())
  shop_id                 Int?
  start_date              DateTime                  @db.Date
  end_date                DateTime                  @db.Date
  create_time             DateTime?                 @default(now()) @db.Timestamp(6)
  status                  Int                       @default(0) @db.SmallInt
  user_id                 Int?
  last_amount             Decimal?                  @default(0) @db.Decimal(12, 6)
  submit_time             DateTime?                 @db.Timestamp(6)
  day_info_id             String?                   @db.VarChar
  total_inventory_amount  Decimal?                  @db.Decimal(12, 2)
  st_inventory_detail     st_inventory_detail[]
  st_inventory_items      st_inventory_items[]
  scm_shop_account        scm_shop_account?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id4")
  scm_shop                scm_shop?                 @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_id_fk3")
  day_info                day_info?                 @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  temp_inventory_analysis temp_inventory_analysis[]

  @@unique([shop_id, start_date, end_date], map: "unique_shop_date_range")
}

model st_kitchen_department {
  id                          String                        @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name                        String?                       @db.VarChar
  brand_id                    Int?
  shop_id                     Int?
  st_inventory_count          st_inventory_count[]
  scm_shop_brand              scm_shop_brand?               @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_kitchen_department_brand_id_fkey84")
  scm_shop                    scm_shop?                     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_kitchen_department_shop_id_fkey87")
  st_kitchen_department_goods st_kitchen_department_goods[]
}

model st_kitchen_department_goods {
  id                        String                     @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  goods_id                  Int?
  kitchen_department_id     String?                    @db.VarChar
  position                  Int?
  is_enabled                Boolean                    @default(true)
  spg_id                    String?                    @db.VarChar
  scm_goods                 scm_goods?                 @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_kitchen_department_goods_goods_id_fkey85")
  scm_supply_plan_scm_goods scm_supply_plan_scm_goods? @relation(fields: [spg_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_kitchen_department     st_kitchen_department?     @relation(fields: [kitchen_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tchen_department_goods_kitchen_department_id_fkey86")

  @@unique([goods_id, kitchen_department_id], map: "unique_goods_kitchen")
}

model st_predict_daily_sales {
  id                             String                           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  day_info_id                    String?                          @db.VarChar
  predict_date                   DateTime?                        @db.Date
  is_confirmed                   Boolean?
  predicted_revenue              Decimal?                         @db.Decimal(12, 2)
  shop_id                        Int?
  day_info                       day_info?                        @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_day_info_id_fkey99")
  scm_shop                       scm_shop?                        @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_shop_id_fkey101")
  st_predict_daily_sales_details st_predict_daily_sales_details[]

  @@unique([day_info_id, shop_id], map: "unique_day_shop")
}

model st_predict_daily_sales_details {
  id                     String                  @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  predict_date           DateTime?               @db.Date
  day_info_id            String?                 @db.VarChar
  shop_id                Int?
  food_item_id           String?                 @db.VarChar
  price                  Decimal?                @db.Decimal(6, 2)
  unit_name              String?                 @db.VarChar
  predicted_qty          Int?
  actual_qty             Int?
  appearances            Int?
  is_predicted           Boolean?
  predict_daily_sales_id String?                 @db.VarChar
  item_total             Decimal?                @db.Decimal(12, 2)
  st_predict_daily_sales st_predict_daily_sales? @relation(fields: [predict_daily_sales_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "_daily_sales_details_predict_daily_sales_id_fkey100")
  day_info               day_info?               @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_details_day_info_id_fkey98")
  st_food_item           st_food_item?           @relation(fields: [food_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_details_food_item_id_fkey97")
  scm_shop               scm_shop?               @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_daily_sales_details_shop_id_fkey96")

  @@unique([day_info_id, shop_id, food_item_id], map: "unique_day_shop_food")
}

model st_predict_order {
  id                       String                     @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  day_info_id              String?                    @db.VarChar
  predict_date             DateTime?                  @db.Date
  is_confirmed             Boolean?
  predicted_order_total    Decimal?                   @db.Decimal(12, 2)
  shop_id                  Int?
  day_info                 day_info?                  @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_order_day_info_id_fkey109")
  scm_shop                 scm_shop?                  @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_order_shop_id_fkey110")
  st_predict_order_details st_predict_order_details[]

  @@unique([day_info_id, shop_id], map: "unique_day_info_shop")
}

model st_predict_order_details {
  id                        String                     @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  predict_order_id          String?                    @db.VarChar
  day_info_id               String                     @db.VarChar
  predict_date              DateTime?                  @db.Date
  shop_id                   Int
  goods_id                  Int?
  predict_qty               Int?
  price_per_unit            Decimal?                   @db.Decimal(12, 2)
  supply_plan_goods_id      String?                    @db.VarChar
  predict_total             Decimal?                   @db.Decimal
  scm_supply_plan_scm_goods scm_supply_plan_scm_goods? @relation(fields: [supply_plan_goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "_predict_order_details_supply_plan_goods_id_fkey123")
  day_info                  day_info                   @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_order_details_day_info_id_fkey115")
  scm_goods                 scm_goods?                 @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_order_details_goods_id_fkey116")
  st_predict_order          st_predict_order?          @relation(fields: [predict_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_order_details_predict_order_id_fkey113")
  scm_shop                  scm_shop                   @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_predict_order_details_shop_id_fkey114")

  @@unique([goods_id, day_info_id, shop_id], map: "unique_day_info_shop_goods")
}

model st_safe_store_goods {
  id                        String                     @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  supply_plan_good_id       String?                    @db.VarChar
  shop_id                   Int?
  min_qty                   Int?
  order_good_unit_id        String?                    @db.VarChar
  scm_good_units            scm_good_units?            @relation(fields: [order_good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_safe_store_goods_order_good_unit_id_fkey106")
  scm_shop                  scm_shop?                  @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_safe_store_goods_shop_id_fkey105")
  scm_supply_plan_scm_goods scm_supply_plan_scm_goods? @relation(fields: [supply_plan_good_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_safe_store_goods_supply_plan_good_id_fkey107")

  @@unique([supply_plan_good_id, shop_id], map: "unique_safe_good")
}

model st_sales_plan {
  id                     String                @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  priid                  String?               @db.VarChar
  code                   String?               @db.VarChar
  name                   String?               @db.VarChar
  isenable               Boolean?
  describe               String?               @db.VarChar
  sortorder              Int?
  isweeklimit            Boolean?
  isshiftlimit           Boolean?
  isdaylimit             Boolean?
  beginday               Decimal?              @db.Decimal
  endday                 Decimal?              @db.Decimal
  createshopid           Int?
  createshopname         String?               @db.VarChar
  saletypeid             Int?
  saletypename           String?               @db.VarChar
  brandid                Int?
  brandcode              String?               @db.VarChar
  brandname              String?               @db.VarChar
  enableprilocalpriceflg Boolean?
  iso2opriceplan         Boolean?
  ismultipriceplan       Boolean?
  istimelimit            Boolean?
  beginhour              Decimal?              @db.Decimal
  beginminute            Decimal?              @db.Decimal
  endhour                Decimal?              @db.Decimal
  endminute              Decimal?              @db.Decimal
  create_time            Decimal?              @db.Decimal
  modify_time            Decimal?              @db.Decimal
  delflg                 Int?
  belongshopid           Int?
  belongshopname         String?               @db.VarChar
  supply_plan_id         Int?
  scm_shop               scm_shop[]
  st_ingredient          st_ingredient[]
  scm_shop_brand         scm_shop_brand?       @relation(fields: [brandid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_sales_plan_brandid_fkey79")
  scm_supply_plan        scm_supply_plan?      @relation(fields: [supply_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_sales_plan_items    st_sales_plan_items[]
}

model st_sales_plan_items {
  id            String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  food_item_id  String?         @db.VarChar
  sales_plan_id String?         @db.VarChar
  st_ingredient st_ingredient[]
  st_food_item  st_food_item?   @relation(fields: [food_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_sales_plan_items_food_item_id_fkey82")
  st_sales_plan st_sales_plan?  @relation(fields: [sales_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_sales_plan_items_sales_plan_id_fkey81")

  @@unique([food_item_id, sales_plan_id], map: "unique_plan_item")
}

model st_settle_details {
  id               String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  daily_sales_id   String?         @db.VarChar
  ts_id            String?         @db.VarChar(50)
  payway_code      String?         @db.VarChar(50)
  payway_id        String?         @db.VarChar
  modify_time      String?         @db.VarChar
  payway_name      String?         @db.VarChar(255)
  pay_money        Decimal?        @db.Decimal(10, 4)
  payway_remark    String?         @db.VarChar(255)
  income_money     Decimal?        @db.Decimal(10, 4)
  delflg           Int?
  settle_state     Int?
  pw_id            String?         @db.VarChar(50)
  payway_out_code  String?         @db.VarChar(255)
  bs_id            String?         @db.VarChar(50)
  consumer_name    String?         @db.VarChar(255)
  card_no          String?         @db.VarChar(255)
  consumer_code    String?         @db.VarChar(255)
  crm_mobile       String?         @db.VarChar(255)
  not_income_money Decimal?        @db.Decimal(10, 4)
  st_daily_sales   st_daily_sales? @relation(fields: [daily_sales_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_settle_details_daily_sales_id_fkey78")
}

model scm_brand_account {
  id               String            @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  brand_id         Int?
  account_id       Int?
  scm_shop_account scm_shop_account? @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_brand_account_account_id_fkey60")
  scm_shop_brand   scm_shop_brand?   @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_brand_account_brand_id_fkey59")

  @@unique([brand_id, account_id], map: "unique_brand_account")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model backup_st_ingredient {
  id                  Int?
  food_item_id        String?  @db.VarChar
  qty                 Decimal? @db.Decimal
  yield_pct           Decimal? @db.Decimal
  goods_id            Int?
  brand_id            Int?
  order_column        Int?
  sales_plan_id       String?  @db.VarChar
  supply_plan_id      Int?
  supply_plan_good_id String?  @db.VarChar
  sales_plan_item_id  String?  @db.VarChar

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model client_organizations {
  id                   Int                    @id @default(autoincrement())
  organization_name    String?                @db.VarChar(50)
  private_client_goods private_client_goods[]
  scm_shop             scm_shop[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model client_tier {
  id               Int                @id @default(autoincrement())
  tier_name        String?            @db.VarChar(50)
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  scm_good_pricing scm_good_pricing[]
}

model com_main_unit {
  id       Int        @id @default(autoincrement())
  name     String?    @unique(map: "unqiue_name") @db.VarChar(60)
  scm_util scm_util[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model del_goods {
  id   Int?
  name String? @db.VarChar

  @@ignore
}

model flyway_schema_history {
  installed_rank Int      @id(map: "flyway_schema_history_pk")
  version        String?  @db.VarChar(50)
  description    String   @db.VarChar(200)
  type           String   @db.VarChar(20)
  script         String   @db.VarChar(1000)
  checksum       Int?
  installed_by   String   @db.VarChar(100)
  installed_on   DateTime @default(now()) @db.Timestamp(6)
  execution_time Int
  success        Boolean

  @@index([success], map: "flyway_schema_history_s_idx")
}

model migration {
  id       Int      @id @default(autoincrement())
  name     String   @default("") @db.VarChar(200)
  app_name String   @default("") @db.VarChar(200)
  ran_on   DateTime @default(now()) @db.Timestamp(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model private_client_goods {
  id                     Int                  @id @default(autoincrement())
  goods_id               Int
  client_organization_id Int
  client_organizations   client_organizations @relation(fields: [client_organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  scm_goods              scm_goods            @relation(fields: [goods_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([goods_id, client_organization_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_account_role {
  id        Int    @id @default(autoincrement())
  role_name String @db.VarChar(60)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_admin {
  id               Int               @id @default(autoincrement())
  mobile           String            @db.VarChar(20)
  password         String            @db.VarChar(60)
  group_id         Int               @db.SmallInt
  nickname         String?           @db.VarChar(50)
  head_pic         String?           @db.VarChar(512)
  last_ip          String?           @db.VarChar(15)
  last_login       DateTime?         @db.Timestamp(6)
  status           Int               @default(1) @db.SmallInt
  create_time      DateTime?         @db.Timestamp(6)
  update_time      DateTime?         @db.Timestamp(6)
  organization_id  Int?
  scm_admin_group  scm_admin_group   @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_id117")
  scm_organization scm_organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_admin_organization_id_fkey9")
  scm_admin_token  scm_admin_token[]

  @@index([status], map: "idx_scm_admin_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_admin_group {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(20)
  description              String?                    @db.VarChar(200)
  sort                     Int                        @default(0) @db.SmallInt
  status                   Int                        @default(1) @db.SmallInt
  en_name                  String?                    @db.VarChar
  scm_admin                scm_admin[]
  scm_admin_group_scm_shop scm_admin_group_scm_shop[]
  scm_group_auth           scm_group_auth[]
  scm_storehouse           scm_storehouse[]
}

model scm_admin_group_scm_shop {
  id              Int              @id @default(autoincrement())
  group_id        Int?
  shop_id         Int?
  scm_admin_group scm_admin_group? @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_admin_group_scm_shop_group_id_fkey33")
  scm_shop        scm_shop?        @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_admin_group_scm_shop_shop_id_fkey32")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_admin_token {
  id             Int             @id @default(autoincrement())
  user_id        Int
  code           String          @db.VarChar(32)
  token          String          @db.VarChar
  typeof         Int             @default(0) @db.SmallInt
  token_expires  DateTime        @db.Timestamp(6)
  admin_id       Int?
  storehouse_id  Int?
  scm_admin      scm_admin?      @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_admin_token_admin_id_fkey119")
  scm_storehouse scm_storehouse? @relation(fields: [storehouse_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_admin_token_storehouse_id_fkey120")

  @@unique([typeof, user_id], map: "unique_user_type")
}

model scm_bulk_picking {
  id                      String                    @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  date                    DateTime?                 @db.Date
  quantity_needed         Decimal?                  @db.Decimal
  created_at              DateTime?                 @default(now()) @db.Timestamp(6)
  quantity_picked         Decimal?                  @default(0) @db.Decimal
  stock_id                Int?                      @db.SmallInt
  automatic               Int?                      @default(1) @db.SmallInt
  goods_id                Int?
  order_id                Int?
  scm_bulk_picking_routes scm_bulk_picking_routes[]

  @@index([date], map: "idx_scm_bulk_picking_date")
}

model scm_bulk_picking_routes {
  id                   String                @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  bulk_picking_id      String?               @db.VarChar
  good_id              Int?
  storage_position_id  String?               @db.VarChar
  storage_position_qty Decimal?              @db.Decimal
  quantity_needed      Decimal?              @db.Decimal
  quantity_picked      Decimal?              @db.Decimal
  date                 DateTime?             @db.Date
  scm_bulk_picking     scm_bulk_picking?     @relation(fields: [bulk_picking_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_bulk_picking_routes_bulk_picking_id_fkey23")
  scm_goods            scm_goods?            @relation(fields: [good_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_bulk_picking_routes_good_id_fkey22")
  scm_storage_position scm_storage_position? @relation(fields: [storage_position_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_bulk_picking_routes_storage_position_id_fkey21")
}

model scm_business_district {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(60)
}

model scm_center_inventory_detail {
  id            Int      @id @default(autoincrement())
  single_id     Int?
  goods_id      Int?
  goods_name    String?  @db.VarChar(60)
  price         Decimal  @db.Decimal(12, 6)
  sale_unit     String?  @db.VarChar(60)
  out_qty       Decimal  @db.Decimal(10, 2)
  inventory_qty Decimal? @default(0) @db.Decimal(10, 2)
  letter_name   String?  @db.VarChar(60)
  balance_qty   Decimal? @db.Decimal(10, 2)
  balance_price Decimal? @db.Decimal(12, 6)
  user_id       Int?
  ent_qty       Decimal? @db.Decimal(10, 2)
  storage_qty   Decimal? @db.Decimal(10, 2)
  refund_qty    Decimal? @default(0) @db.Decimal(10, 2)
  loss_qty      Decimal? @default(0) @db.Decimal(10, 2)
  return_qty    Decimal? @default(0) @db.Decimal(10, 2)
}

model scm_center_inventory_single {
  id          Int       @id @default(autoincrement())
  storage_id  String?   @db.VarChar
  end_date    DateTime  @db.Date
  create_time DateTime? @default(now()) @db.Timestamp(6)
  status      Int       @default(0) @db.SmallInt
  user_id     Int?
  submit_time DateTime? @db.Timestamp(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_ent_details {
  id                 Int           @id @default(autoincrement())
  ent_no             String        @db.VarChar(60)
  quantity           Decimal       @default(0) @db.Decimal(10, 2)
  create_time        DateTime?     @default(now()) @db.Timestamp(6)
  en_qty             Decimal?      @default(0) @db.Decimal(10, 2)
  status             Int?          @default(0) @db.SmallInt
  goods_id           Int?
  sale_price         Decimal?      @db.Decimal(12, 6)
  small_price        Decimal?      @db.Decimal(12, 6)
  sale_unit          String?       @db.VarChar(10)
  small_unit         String?       @db.VarChar(10)
  ratio              Int?
  total_price        Decimal?      @db.Decimal(12, 6)
  storage_unit       String?       @db.VarChar
  storage_sale_ratio Int?
  storage_price      Decimal?      @db.Decimal(12, 6)
  just_amount        Decimal?      @db.Decimal(12, 6)
  remaining_qty      Decimal?      @db.Decimal(12, 4)
  scm_ent_stock      scm_ent_stock @relation(fields: [ent_no], references: [ent_no], onDelete: NoAction, onUpdate: NoAction, map: "ent_no_key27")
}

model scm_ent_mail {
  id            Int       @id @default(autoincrement())
  supplier_id   Int?
  supplier_name String?   @db.VarChar(60)
  mail          String?   @db.VarChar(60)
  list          String?
  date          DateTime? @db.Date
  status        Int?      @db.SmallInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_ent_pallet {
  id             Int       @id @default(autoincrement())
  goods_id       Int
  ent_details_id Int
  quantity       Decimal   @db.Decimal(10, 2)
  pallet_id      String    @db.VarChar
  create_time    DateTime? @default(now()) @db.Timestamp(6)
  status         Int?      @default(0) @db.SmallInt
  revoke         Int?      @default(0) @db.SmallInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_ent_stock {
  id              Int               @id @default(autoincrement())
  ent_no          String            @unique(map: "unique_ent_no") @db.VarChar(60)
  supplier_id     Int
  stock_id        Int?              @db.SmallInt
  admin_id        Int
  deliver_time    DateTime?         @db.Timestamp(6)
  create_time     DateTime?         @default(now()) @db.Timestamp(6)
  status          Int?              @default(0) @db.SmallInt
  storage_date    DateTime?         @db.Date
  remarks         String?           @db.VarChar
  add_amount      Decimal?          @default(0) @db.Decimal(10, 2)
  automatic       Int?              @default(0) @db.SmallInt
  storage_time    DateTime?         @db.Timestamp(6)
  scm_ent_details scm_ent_details[]
}

model scm_finance_mail {
  id          Int     @id @default(autoincrement())
  seller_name String  @db.VarChar(100)
  seller_id   Int?
  mail        String  @db.VarChar(60)
  file_path   String? @db.VarChar
  month       String? @db.VarChar
  number      Int?    @default(0) @db.SmallInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_good_pricing {
  id               Int                   @id @default(autoincrement())
  goods_id         Int
  good_unit_id     String                @db.VarChar
  client_tier_id   Int?
  pricing_strategy pricing_strategy_type
  profit_margin    Decimal?              @db.Decimal(8, 2)
  sale_price       Decimal?              @db.Decimal(12, 2)
  is_active        Boolean               @default(true)
  created_at       DateTime?             @default(now()) @db.Timestamp(6)
  client_tier      client_tier?          @relation(fields: [client_tier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_good_units   scm_good_units        @relation(fields: [good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_goods        scm_goods             @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([goods_id, good_unit_id, client_tier_id, pricing_strategy], map: "unique_pricing_configuration")
}

model scm_goods_brand {
  id             String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  goods_id       Int?
  brands_id      Int?
  scm_shop_brand scm_shop_brand? @relation(fields: [brands_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_goods_brand_brands_id_fkey58")
  scm_goods      scm_goods?      @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_goods_brand_goods_id_fkey57")

  @@unique([goods_id, brands_id], map: "unique_goods_brand")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_goods_category {
  id         Int         @id @default(autoincrement())
  parent_id  Int         @default(0)
  name       String      @db.VarChar(16)
  phonetic   String      @db.VarChar(8)
  storage_id Int?
  sort       Int         @default(0) @db.SmallInt
  status     Int         @default(1) @db.SmallInt
  level      Int?        @db.SmallInt
  serial_num String?     @unique @db.VarChar
  scm_goods  scm_goods[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_goods_img {
  id          Int         @id @default(autoincrement())
  goods_id    Int
  storage_id  Int
  create_time DateTime?   @db.Timestamp(6)
  scm_storage scm_storage @relation(fields: [storage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_storage_id49")
  scm_goods   scm_goods   @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "goods_id56")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_goods_price {
  id                 Int       @id @default(autoincrement())
  goods_id           Int?
  spec_text          String?   @db.VarChar(60)
  small_unit         String?   @db.VarChar(10)
  sale_unit          String?   @db.VarChar(10)
  ratio              Int?
  status             Int       @default(1) @db.SmallInt
  price              Decimal   @db.Decimal(12, 6)
  create_time        DateTime? @default(now()) @db.Timestamp(6)
  update_time        DateTime? @default(now()) @db.Timestamp(6)
  util_id            Int?
  storage_unit       String?   @db.VarChar
  storage_sale_ratio Int?
  scm_util           scm_util? @relation(fields: [util_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_util_id50")
}

model scm_goods_price_history {
  goods_id    Int?
  spec_text   String?   @db.VarChar(60)
  small_unit  String?   @db.VarChar(10)
  sale_unit   String?   @db.VarChar(10)
  ratio       Int?
  status      Int?      @default(1) @db.SmallInt
  price       Decimal?  @db.Decimal(10, 4)
  create_time DateTime? @default(now()) @db.Timestamp(6)
  update_time DateTime? @default(now()) @db.Timestamp(6)
  price_date  DateTime? @default(now()) @db.Timestamp(6)
  id          Int       @id @default(autoincrement())
  util_id     Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_group_auth {
  id              Int             @id @default(autoincrement())
  group_id        Int             @db.SmallInt
  menu_id         Int             @db.SmallInt
  create_time     DateTime?       @default(now()) @db.Timestamp(6)
  scm_admin_group scm_admin_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_id121")
  scm_menu        scm_menu        @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_menu_id122")

  @@index([group_id], map: "idx_scm_group_auth_group_id")
}

model scm_hide_price {
  id          Int       @id @default(autoincrement())
  goods_id    Int
  hide_price  Decimal   @db.Decimal(10, 2)
  create_time DateTime? @db.Timestamp(6)
  update_time DateTime? @db.Timestamp(6)
  scm_goods   scm_goods @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_goods_id125")
}

model scm_inventory_detail {
  id                   Int                   @id @default(autoincrement())
  single_id            Int?
  goods_id             Int?
  goods_name           String?               @db.VarChar(60)
  qty                  Decimal?              @default(0) @db.Decimal(10, 2)
  inventory_qty        Decimal?              @default(0) @db.Decimal(10, 2)
  user_id              Int?
  price                Decimal?              @default(0) @db.Decimal(12, 6)
  sale_unit            String?               @db.VarChar(10)
  letter_name          String?               @db.VarChar
  balance_qty          Decimal?              @default(0) @db.Decimal(10, 2)
  balance_price        Decimal?              @default(0) @db.Decimal(12, 6)
  scm_goods            scm_goods?            @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "goods_id_fk68")
  scm_inventory_single scm_inventory_single? @relation(fields: [single_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "single_id_fk")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model scm_inventory_detail_copy {
  id                    Int?
  single_id             Int?
  goods_id              Int?
  goods_name            String?  @db.VarChar(60)
  qty                   Decimal? @db.Decimal(10, 2)
  inventory_qty         Decimal? @db.Decimal(10, 2)
  user_id               Int?
  price                 Decimal? @db.Decimal(12, 6)
  sale_unit             String?  @db.VarChar(10)
  letter_name           String?  @db.VarChar
  balance_qty           Decimal? @db.Decimal(10, 2)
  balance_price         Decimal? @db.Decimal(12, 6)
  overage_qty           Decimal? @db.Decimal(12, 2)
  use_qty               Decimal? @db.Decimal(12, 4)
  inventory_total_price Decimal? @db.Decimal
  use_total_price       Decimal? @db.Decimal(12, 2)

  @@ignore
}

model scm_inventory_single {
  id                   Int                    @id @default(autoincrement())
  shop_id              Int?
  start_date           DateTime?              @db.Date
  end_date             DateTime?              @db.Date
  create_time          DateTime?              @db.Timestamp(6)
  status               Int                    @default(0) @db.SmallInt
  user_id              Int?
  last_amount          Decimal                @default(0) @db.Decimal(12, 6)
  submit_time          DateTime?              @db.Timestamp(6)
  scm_inventory_detail scm_inventory_detail[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model scm_inventory_single_copy {
  id                     Int?
  shop_id                Int?
  start_date             DateTime? @db.Date
  end_date               DateTime? @db.Date
  create_time            DateTime? @db.Timestamp(6)
  status                 Int?      @db.SmallInt
  user_id                Int?
  last_amount            Decimal?  @db.Decimal(12, 6)
  submit_time            DateTime? @db.Timestamp(6)
  day_info_id            String?   @db.VarChar
  total_inventory_amount Decimal?  @db.Decimal(12, 2)

  @@ignore
}

model scm_inventory_single_order_stock {
  id              Int     @id @default(autoincrement())
  single_id       Int
  order_stock_ids String?
}

model scm_mail {
  id          Int       @id @default(autoincrement())
  seller_name String    @db.VarChar(100)
  seller_id   Int?
  mail        String    @db.VarChar(60)
  list        String?
  date        DateTime? @db.Date
  status      Int?      @default(0) @db.SmallInt
}

model scm_meal_plan {
  id        Int    @id @default(autoincrement())
  plan_name String @db.VarChar
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_menu {
  id             Int              @id @default(autoincrement())
  parent_id      Int              @default(0)
  name           String           @db.VarChar(16)
  icon           String?          @db.VarChar(64)
  remark         String?          @db.VarChar(200)
  url            String?          @db.VarChar(200)
  is_navi        Int              @default(1) @db.SmallInt
  sort           Int              @default(0) @db.SmallInt
  status         Int              @default(1) @db.SmallInt
  scm_group_auth scm_group_auth[]
}

model scm_order_details_log {
  id               Int       @id @default(autoincrement())
  order_details_id Int
  log_type         Int       @default(1) @db.SmallInt
  old_value        Decimal   @db.Decimal(12, 6)
  new_value        Decimal   @db.Decimal(12, 6)
  create_time      DateTime? @default(now()) @db.Timestamp(6)
  remark           String?   @db.VarChar
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_order_stock {
  id             Int         @id @default(autoincrement())
  order_id       Int
  stock_id       Int?        @db.SmallInt
  direct         Int         @db.SmallInt
  create_time    DateTime?   @default(now()) @db.Timestamp(6)
  seller_id      Int?
  stock_order_no String?     @unique(map: "unique_stock_order_no") @db.VarChar(600)
  status         Int?        @default(0) @db.SmallInt
  receival_time  DateTime?   @db.Timestamp(6)
  locking        Int?        @default(0) @db.SmallInt
  scm_seller     scm_seller? @relation(fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_order_stock_seller_id_fkey7")
  scm_stock      scm_stock?  @relation(fields: [stock_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_order_stock_stock_id_fkey15")
}

model scm_organization {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(60)
  scm_admin        scm_admin[]
  scm_shop_account scm_shop_account[]
  scm_shop_brand   scm_shop_brand[]
}

model scm_predict_order {
  id                    String    @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  day_info_id           String?   @db.VarChar
  predict_date          DateTime? @db.Date
  is_confirmed          Boolean?
  predicted_order_total Decimal?  @db.Decimal(12, 2)
  shop_id               Int?
  day_info              day_info? @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_predict_order_day_info_id_fkey102")
  scm_shop              scm_shop? @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_predict_order_shop_id_fkey103")
}

model scm_price_plan {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar
  scm_price_plan_scm_goods scm_price_plan_scm_goods[]
  scm_supply_plan          scm_supply_plan[]
}

model scm_price_plan_scm_goods {
  id             Int            @id @default(autoincrement())
  price_plan_id  Int
  good_id        Int
  price          Decimal        @db.Decimal(12, 6)
  status         Int            @default(0) @db.SmallInt
  scm_goods      scm_goods      @relation(fields: [good_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "good_id_fk39")
  scm_price_plan scm_price_plan @relation(fields: [price_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "price_plan_id_fk37")
}

model scm_return_goods {
  id              Int        @id @default(autoincrement())
  supplier_id     Int?
  goods_id        Int?
  date            DateTime?  @db.Date
  qty             Decimal?   @db.Decimal(12, 6)
  price           Decimal?   @db.Decimal(12, 6)
  status          Int?       @default(0) @db.SmallInt
  order_detail_id Int?
  reason          Int?       @default(0) @db.SmallInt
  create_time     DateTime?  @default(now()) @db.Timestamp(6)
  remark          String?    @db.VarChar
  scm_goods       scm_goods? @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_scm_return_goods_scm_goods")
}

model scm_return_goods_month {
  id          Int       @id @default(autoincrement())
  goods_id    Int
  date        DateTime  @db.Date
  qty         Decimal   @db.Decimal(10, 4)
  create_time DateTime? @db.Timestamp(6)
  remark      String?   @db.VarChar
  shop_id     Int
}

model scm_seller {
  id              Int               @id @default(autoincrement())
  seller_name     String            @db.VarChar(60)
  phone_number    String?           @db.VarChar
  mail            String?           @db.VarChar
  old_id          Int?
  scm_order_stock scm_order_stock[]
}

model scm_seller_account {
  id          Int       @id @default(autoincrement())
  seller_id   Int
  moniker     String?   @db.VarChar(100)
  mobile      String?   @db.VarChar(16)
  password    String?   @db.VarChar(60)
  last_login  DateTime? @db.Timestamp(6)
  create_time DateTime? @default(now()) @db.Timestamp(6)
  group_id    Int?      @default(5) @db.SmallInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model scm_seller_account_backup {
  id          Int?
  seller_id   Int?
  moniker     String?   @db.VarChar(100)
  mobile      String?   @db.VarChar(16)
  password    String?   @db.VarChar(60)
  last_login  DateTime? @db.Timestamp(6)
  create_time DateTime? @db.Timestamp(6)
  group_id    Int?      @db.SmallInt

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model scm_seller_copy {
  id           Int?
  seller_name  String? @db.VarChar(60)
  phone_number String? @db.VarChar
  mail         String? @db.VarChar
  old_id       Int?

  @@ignore
}

model scm_sender_mail {
  id           Int       @id @default(autoincrement())
  sender_name  String    @db.VarChar
  sender_email String    @db.VarChar
  smtp_server  String    @db.VarChar
  smtp_port    Int
  password     String    @db.VarChar
  create_time  DateTime? @default(now()) @db.Timestamp(6)
}

model scm_sender_mail_log {
  id             Int      @id @default(autoincrement())
  sender_mail_id Int
  sender_date    DateTime @db.Date
  times          Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model scm_shop_account_backup {
  id              Int?
  moniker         String?   @db.VarChar
  mobile          String?   @db.VarChar(16)
  password        String?   @db.VarChar(60)
  role_type       Int?      @db.SmallInt
  last_login      DateTime? @db.Timestamp(6)
  create_time     DateTime? @db.Timestamp(6)
  status          Int?      @db.SmallInt
  organization_id Int?
  serial_num      String?   @db.VarChar

  @@ignore
}

model scm_shopping {
  id          Int       @id @default(autoincrement())
  shop_id     Int
  account_id  Int
  num         Decimal   @db.Decimal(10, 2)
  stall_id    Int?
  create_time DateTime? @default(now()) @db.Timestamp(6)
  price       Decimal?  @db.Decimal(10, 2)
  total_price Decimal?  @db.Decimal(10, 2)
  goods_id    Int?

  @@index([shop_id], map: "idx_scm_shopping_shop_id")
}

model scm_shopping_history {
  id          Int       @id @default(autoincrement())
  shop_id     Int
  account_id  Int
  num         Int
  price       Decimal   @db.Decimal(10, 2)
  stall_id    Int?
  create_time DateTime? @db.Timestamp(6)
  goods_id    Int?
  hide_price  Decimal?  @default(0) @db.Decimal(10, 2)
}

model scm_small_storage {
  id                   String                 @id(map: "small_storage_pkey") @db.VarChar
  facility_id          String?                @db.VarChar
  name                 String?                @db.VarChar
  temperature          String?                @db.VarChar
  scm_storage_facility scm_storage_facility?  @relation(fields: [facility_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "small_storage_facility_id_fkey16")
  scm_storage_position scm_storage_position[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_stock {
  id              Int               @id @default(autoincrement())
  stock_name      String            @db.VarChar(60)
  serial_num      String?           @db.VarChar(60)
  address         String?           @db.VarChar(60)
  usetype         Int               @default(1) @db.SmallInt
  status          Int               @default(1) @db.SmallInt
  create_time     DateTime?         @default(now()) @db.Timestamp(6)
  struc_type      Int?              @default(1) @db.SmallInt
  sold_time       DateTime?         @default(dbgenerated("'15:00:00'::time without time zone")) @db.Time(6)
  small_storage   String?           @db.VarChar
  scm_goods       scm_goods[]
  scm_order_stock scm_order_stock[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_storage {
  id            Int             @id @default(autoincrement())
  file_name     String          @db.VarChar(200)
  suffix        String?         @db.VarChar(10)
  file_size     Int?
  file_path     String          @db.VarChar(200)
  create_time   DateTime?       @db.Timestamp(6)
  scm_goods_img scm_goods_img[]
}

model scm_storage_facility {
  id                   String                 @id(map: "storage_facility_pkey") @db.VarChar
  name                 String?                @db.VarChar
  address              String?                @db.VarChar
  scm_small_storage    scm_small_storage[]
  scm_storage_position scm_storage_position[]
}

model scm_storage_goods_log {
  id                  Int       @id @default(autoincrement())
  good_id             Int
  storage_position_id String    @db.VarChar
  qty                 Decimal   @db.Decimal(10, 4)
  date                DateTime? @db.Date
  logtype             Int       @default(0) @db.SmallInt
  create_time         DateTime? @default(now()) @db.Timestamp(6)
  old_qty             Decimal?  @db.Decimal(10, 4)
  new_qty             Decimal?  @db.Decimal(10, 4)
  reason              String?   @db.VarChar
}

model scm_storage_position {
  id                             String                           @id(map: "storage_position_pkey") @db.VarChar
  storage_facility_id            String?                          @db.VarChar
  small_storage_id               String?                          @db.VarChar
  row_num                        Int?
  column_num                     Int?
  level_num                      Int?
  last_audit                     DateTime?                        @db.Timestamp(6)
  updated_at                     DateTime?                        @db.Timestamp(6)
  created_at                     DateTime?                        @db.Timestamp(6)
  scm_bulk_picking_routes        scm_bulk_picking_routes[]
  scm_small_storage              scm_small_storage?               @relation(fields: [small_storage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "storage_position_small_storage_id_fkey18")
  scm_storage_facility           scm_storage_facility?            @relation(fields: [storage_facility_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "storage_position_storage_facility_id_fkey17")
  scm_storage_position_scm_goods scm_storage_position_scm_goods[]
}

model scm_storage_position_scm_goods {
  storage_position_id  String               @db.VarChar
  good_id              Int
  qty                  Decimal              @db.Decimal(10, 4)
  is_ex                Int?                 @default(0) @db.SmallInt
  scm_storage_position scm_storage_position @relation(fields: [storage_position_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orage_position_scm_goods_storage_position_id_fkey20")
  scm_goods            scm_goods            @relation(fields: [good_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_storage_position_scm_goods_good_id_fkey19")

  @@id([storage_position_id, good_id])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model scm_storage_position_scm_goods_copy {
  storage_position_id String?  @db.VarChar
  good_id             Int?
  qty                 Decimal? @db.Decimal(10, 2)
  is_ex               Int?     @db.SmallInt

  @@ignore
}

model scm_store_picking_supplyitems_vege_routes {
  id                           Int       @id @default(autoincrement())
  store_picking_supplyitems_id String    @db.VarChar
  storage_position_id          String    @db.VarChar
  qty                          Decimal   @db.Decimal
  create_time                  DateTime? @db.Timestamp(6)
}

model scm_storehouse {
  mobile                  String                    @db.VarChar
  password                String                    @db.VarChar
  group_id                Int                       @db.SmallInt
  nickname                String                    @db.VarChar
  status                  Int                       @default(1) @db.SmallInt
  create_time             DateTime?                 @default(now()) @db.Timestamp(6)
  id                      Int                       @id @default(autoincrement())
  scm_admin_token         scm_admin_token[]
  scm_admin_group         scm_admin_group           @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_id118")
  scm_storehouse_scm_shop scm_storehouse_scm_shop[]
}

model scm_storehouse_scm_shop {
  id             Int            @id @default(autoincrement())
  storehouse_id  Int
  shop_id        Int
  scm_storehouse scm_storehouse @relation(fields: [storehouse_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_storehouse")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_supplier {
  id                        Int                         @id @default(autoincrement())
  supplier_name             String                      @db.VarChar(60)
  phone_number              String?                     @db.VarChar(60)
  serial_num                String                      @db.VarChar(60)
  settlement                Int                         @default(1) @db.SmallInt
  create_time               DateTime?                   @default(now()) @db.Timestamp(6)
  is_first                  Int?                        @default(1) @db.SmallInt
  push_order                Int?                        @default(0) @db.SmallInt
  mail                      String?                     @db.VarChar
  scm_supplier_person       scm_supplier_person[]
  scm_supplier_price_plan   scm_supplier_price_plan[]
  scm_suppliers_goods_daily scm_suppliers_goods_daily[]
}

model scm_supplier_box {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(200)
  description String? @db.VarChar(200)
}

model scm_supplier_box_scm_supplier {
  id          Int @id @default(autoincrement())
  supplier_id Int
  box_id      Int
}

model scm_supplier_person {
  id           Int          @id @default(autoincrement())
  supplier_id  Int
  name         String       @db.VarChar(60)
  phone_number String       @db.VarChar(60)
  password     String?      @db.VarChar
  scm_supplier scm_supplier @relation(fields: [supplier_id], references: [id], onDelete: Cascade, map: "scm_supplier_person_supplier_id_fkey1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model scm_supplier_person_backup {
  id           Int?
  supplier_id  Int?
  name         String? @db.VarChar(60)
  phone_number String? @db.VarChar(60)
  password     String? @db.VarChar

  @@ignore
}

model scm_supplier_price_plan {
  id           Int          @id @default(autoincrement())
  supplier_id  Int
  goods_id     Int
  spec_text    String?      @db.VarChar(60)
  util_id      Int?
  sale_price   Decimal?     @db.Decimal(10, 2)
  small_price  Decimal?     @db.Decimal(12, 6)
  scm_goods    scm_goods    @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_goods51")
  scm_supplier scm_supplier @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_supplier52")
  scm_util     scm_util?    @relation(fields: [util_id], references: [id], onDelete: Cascade, map: "scm_supplier_price_plan_util_id_fkey53")

  @@unique([goods_id, supplier_id], map: "unique_supplier_good")
}

model scm_suppliers_goods_daily {
  id           Int           @id @default(autoincrement())
  goods_id     Int?
  suppliers_id Int?
  date         DateTime?     @db.Date
  qty          Decimal?      @db.Decimal
  generate     Int?          @default(0) @db.SmallInt
  scm_goods    scm_goods?    @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_suppliers_goods_daily_goods_id_fkey30")
  scm_supplier scm_supplier? @relation(fields: [suppliers_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_suppliers_goods_daily_suppliers_id_fkey31")

  @@unique([goods_id, suppliers_id, date], map: "unique_goods_supplier_date")
}

model scm_tc_shop {
  id        Int     @id @default(autoincrement())
  shop_id   Int
  shop_name String? @db.VarChar(512)
}

model scm_transfer_stock {
  id                   Int       @id @default(autoincrement())
  good_id              Int
  old_small_storage_id String    @db.VarChar
  old_position_id      String    @db.VarChar
  new_small_storage_id String    @db.VarChar
  new_position_id      String    @db.VarChar
  qty                  Decimal   @db.Decimal(10, 4)
  create_time          DateTime? @db.Timestamp(6)
}

model scm_units_of_measure {
  id   String @id(map: "units_of_measure_pkey") @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name String @db.VarChar
}

model scm_user_update_position_log {
  id              Int       @id @default(autoincrement())
  goods_id        BigInt
  user_id         BigInt
  old_position_id String?   @db.VarChar
  new_position_id String?   @db.VarChar
  qty             Decimal?  @db.Decimal(10, 2)
  create_time     DateTime? @db.Timestamp(6)
}

model scm_util {
  id                      Int                       @id @default(autoincrement())
  sale_unit               String                    @db.VarChar(10)
  small_unit              String?                   @db.VarChar(10)
  ratio                   Int?
  main_unit_id            Int?
  scm_goods               scm_goods[]
  scm_goods_price         scm_goods_price[]
  scm_supplier_price_plan scm_supplier_price_plan[]
  com_main_unit           com_main_unit?            @relation(fields: [main_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_util_main_unit_id_fkey48")
}

model scm_version {
  id             Int       @id @default(autoincrement())
  version_number String    @db.VarChar(50)
  app_type       String    @default("wms") @db.VarChar(10)
  create_time    DateTime? @default(now()) @db.Timestamp(6)
}

model st_accounts {
  id               Int                @id @default(autoincrement())
  moniker          String?            @db.VarChar(60)
  mobile           String?            @db.VarChar(60)
  password         String?            @db.VarChar(60)
  organization_id  Int?
  serial_num       String?            @db.VarChar
  role             Int?
  st_org           st_org?            @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_accounts_organization_id_fkey34")
  st_store_account st_store_account[]
}

model st_food_item_copy {
  item_id            String    @id @db.VarChar
  item_name          String?   @db.VarChar(255)
  unit_id            String?   @db.VarChar
  unit_name          String?   @db.VarChar(50)
  std_price          Decimal?  @db.Decimal(10, 4)
  big_class_id       String?   @db.VarChar
  big_class_name     String?   @db.VarChar(255)
  small_class_id     String?   @db.VarChar
  small_class_name   String?   @db.VarChar(255)
  is_package         Boolean?
  is_temp_item       Boolean?
  is_enable          Boolean?
  delflg             Int?      @db.SmallInt
  center_code        String?   @db.VarChar(50)
  center_name        String?   @db.VarChar(255)
  brand_id           String?   @db.VarChar
  brand_code         String?   @db.VarChar(50)
  brand_name         String?   @db.VarChar(255)
  shop_code          String?   @db.VarChar(50)
  shop_name          String?   @db.VarChar(255)
  create_time        DateTime? @db.Timestamp(6)
  modify_time        DateTime? @db.Timestamp(6)
  big_pic_url        String?
  small_pic_url      String?
  gif_pic_url        String?
  video_url          String?
  big_pic3_url       String?
  barcode            String?   @db.VarChar(100)
  english_name       String?   @db.VarChar(255)
  intro              String?   @db.VarChar(255)
  salesrevenuetypeid String?   @db.VarChar(50)
  auxiliary_unit_id  String?   @db.VarChar
  zxjtype            Int?      @db.SmallInt
  pungencydegree     Int?      @db.SmallInt
  brand_item_code    String?   @db.VarChar(50)
  brand_item_name    String?   @db.VarChar(255)
  aid_code           String?   @db.VarChar(50)
  sku_code           String?   @db.VarChar(50)
  standard_time      DateTime? @db.Timestamp(6)
  warn_time          DateTime? @db.Timestamp(6)
  other_name         String?   @db.VarChar(255)
}

model st_food_item_copy_on {
  id                 String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  onlinesalesprice   Decimal?        @db.Decimal(10, 4)
  brandid            Int?
  shopid             Int?
  sizeid             Int?
  channelinfogroupid String?         @db.VarChar
  plid               String?         @db.VarChar
  unitname           String?         @db.VarChar(255)
  memberprice        Decimal?        @db.Decimal(10, 4)
  itemcode           String?         @db.VarChar(50)
  costprice          Decimal?        @db.Decimal(10, 4)
  itemid             String?         @db.VarChar
  itemname           String?         @db.VarChar(255)
  wuuordertakeout    Decimal?        @db.Decimal(10, 4)
  sizename           String?         @db.VarChar(50)
  price              Decimal?        @db.Decimal(10, 4)
  unitid             String?         @db.VarChar
  wuuorderdinner     Decimal?        @db.Decimal(10, 4)
  stdprice           Decimal?        @db.Decimal(10, 4)
  wuupickup          Decimal?        @db.Decimal(10, 4)
  scm_shop_brand     scm_shop_brand? @relation(fields: [brandid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_food_item_copy_on_brandid_fkey5")
  scm_shop           scm_shop?       @relation(fields: [shopid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_food_item_copy_on_shopid_fkey6")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model st_ingredient_copy {
  id                  Int?
  food_item_id        String?  @db.VarChar
  qty                 Decimal? @db.Decimal
  yield_pct           Decimal? @db.Decimal
  goods_id            Int?
  brand_id            Int?
  order_column        Int?
  sales_plan_id       String?  @db.VarChar
  supply_plan_id      Int?
  supply_plan_good_id String?  @db.VarChar
  sales_plan_item_id  String?  @db.VarChar

  @@ignore
}

model st_ingredient_types {
  id              String           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name            String?          @db.VarChar
  brand_id        Int?
  supply_plan_id  Int?
  scm_shop        scm_shop[]
  scm_shop_brand  scm_shop_brand?  @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_ingredient_types_brand_id_fkey70")
  scm_supply_plan scm_supply_plan? @relation(fields: [supply_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_ingredient_types_supply_plan_id_fkey28")
}

model st_inventory_count {
  id                    String                 @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  qty                   Decimal?               @db.Decimal
  inventory_item_id     String?                @db.VarChar
  good_unit_id          String?                @db.VarChar
  user_id               Int?
  kitchen_department_id String?                @db.VarChar
  scm_good_units        scm_good_units?        @relation(fields: [good_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_inventory_count_good_unit_id_fkey76")
  st_inventory_items    st_inventory_items?    @relation(fields: [inventory_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "st_inventory_count_inventory_item_id_fkey89")
  st_kitchen_department st_kitchen_department? @relation(fields: [kitchen_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_inventory_count_kitchen_department_id_fkey88")
  scm_shop_account      scm_shop_account?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_inventory_count_user_id_fkey77")

  @@unique([kitchen_department_id, inventory_item_id, good_unit_id], map: "unique_inventory_combination")
}

model st_inventory_items {
  id                    String                  @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  good_id               Int?
  orig_qty              Decimal?                @db.Decimal
  order_qty             Decimal?                @db.Decimal
  inventory_id          Int?
  price                 Decimal?                @db.Decimal(12, 2)
  orig_price            Decimal?                @db.Decimal
  st_inventory_count    st_inventory_count[]
  scm_goods             scm_goods?              @relation(fields: [good_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_inventory_items_good_id_fkey46")
  st_inventory_single   st_inventory_single?    @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_inventory_items_inventory_id_fkey47")
  st_inventory_miscount st_inventory_miscount[]

  @@unique([good_id, inventory_id], map: "unique_good_inventory")
  @@unique([good_id, inventory_id], map: "unique_goods_inventory")
}

model st_inventory_miscount {
  id                 String              @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  inventory_item_id  String?             @db.VarChar
  missed_qty         Decimal?            @db.Decimal(12, 4)
  price              Decimal?            @db.Decimal(12, 4)
  st_inventory_items st_inventory_items? @relation(fields: [inventory_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_inventory_miscount_inventory_item_id_fkey91")
}

model st_member_account {
  account_type_id       String?   @db.VarChar(255)
  account_type_name     String?   @db.VarChar(255)
  account_type_url      String?
  address               String?
  all_relatives         Json?
  birthday              DateTime? @db.Timestamptz(6)
  birthday_type         String?   @db.VarChar(10)
  by_invite_code        String?
  by_invite_member_id   String?
  by_invite_member_name String?
  by_invite_photo       String?
  by_invite_sex         String?
  caller_name           String?
  card_count            String?   @db.VarChar(100)
  card_kind             String?
  certificate_no        String?
  company_id            String?   @db.VarChar(255)
  create_time           DateTime? @db.Timestamptz(6)
  email                 String?
  english_name          String?
  id                    String    @id @db.VarChar(255)
  info_improved_flag    String?   @db.VarChar(10)
  invite_ids            String?
  invite_names          String?
  invite_photos         String?
  invite_sexs           String?
  is_mobile_validated   String?
  job                   String?
  landline              String?
  lunar_birthday        DateTime? @db.Timestamptz(6)
  member_account        String?
  mobile                String?   @db.VarChar(20)
  mobile_area           String?   @db.VarChar(10)
  my_invite_code        String?   @db.VarChar(50)
  name                  String?
  nation                String?
  note                  String?
  password              String?   @db.VarChar(255)
  photo                 String?
  post_code             String?
  qq                    String?   @db.VarChar(50)
  sex                   String?   @db.VarChar(10)
  shop_id               String?   @db.VarChar(255)
  shop_name             String?
  status                String?   @db.VarChar(10)
  update_time           DateTime? @db.Timestamptz(6)
  version               String?
  work_unit             String?
}

model st_menu {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(60)
  icon String? @db.VarChar(60)
  url  String? @db.VarChar(60)
  sort Int?
}

model st_org {
  id          Int           @id @default(autoincrement())
  name        String?       @db.VarChar(60)
  st_accounts st_accounts[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model st_safe_store_goods_copy {
  id                  String? @db.VarChar
  supply_plan_good_id String? @db.VarChar
  shop_id             Int?
  min_qty             Int?
  order_good_unit_id  String? @db.VarChar

  @@ignore
}

model st_shop_sales_details {
  id               BigInt    @id @default(autoincrement())
  bs_id            BigInt
  last_qty         Decimal   @db.Decimal(10, 2)
  small_class_name String?   @db.VarChar
  item_id          BigInt
  item_name        String?   @db.VarChar
  last_total       Decimal?  @db.Decimal(10, 2)
  delflg           Int       @default(0) @db.SmallInt
  create_time      DateTime? @db.Timestamp(6)
  date             DateTime? @db.Date
  tc_shop_id       BigInt    @default(0)

  @@index([date], map: "idx_date")
  @@index([tc_shop_id], map: "idx_tc_shop_id")
}

model st_shop_section {
  id            Int             @id @default(autoincrement())
  name          String?         @db.VarChar(50)
  shop_id       Int
  scm_shop      scm_shop        @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_shop_table st_shop_table[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model st_shop_table {
  id              Int              @id @default(autoincrement())
  shop_id         Int
  section_id      Int?
  section_num     Int
  capacity        Int
  status          Int
  st_shop_section st_shop_section? @relation(fields: [section_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop        scm_shop         @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model st_store_account {
  id          Int          @id @default(autoincrement())
  store_id    Int?
  account_id  Int?
  st_accounts st_accounts? @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_store_account_account_id_fkey36")
}

model temp_inventory_analysis {
  id                  String               @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  brand_id            Int?
  shop_id             Int?
  inventory_id        Int?
  inventory_status    Int?
  total_waste_money   Decimal?             @db.Decimal(12, 2)
  total_save_money    Decimal?             @db.Decimal(12, 2)
  day_info_id         String?              @db.VarChar
  scm_shop_brand      scm_shop_brand?      @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  day_info            day_info?            @relation(fields: [day_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_inventory_single st_inventory_single? @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop            scm_shop?            @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model test_flyback {
  id          Int       @id @default(autoincrement())
  user_id     String    @db.Uuid
  total_price Decimal   @db.Decimal(10, 2)
  order_date  DateTime? @default(now()) @db.Timestamp(6)
}

model test_flyway {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

model testproduct {
  id        Int        @id @default(autoincrement())
  name      String?    @db.VarChar
  user_id   Int?
  testtable testtable? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "testproduct_user_id_fkey55")
}

model testtable {
  id          Int           @id @default(autoincrement())
  name        String?       @db.VarChar
  phone       Decimal?      @db.Decimal
  email       String?       @db.VarChar
  testproduct testproduct[]
}

model testtable2 {
  id   Int     @id(map: "must_be_different") @default(autoincrement())
  name String? @db.VarChar
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model roles {
  id         Int          @id @default(autoincrement())
  role_name  String       @unique @db.VarChar(100)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  user_roles user_roles[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stock_category {
  id                        Int                         @id @default(autoincrement())
  name                      String?                     @db.VarChar(50)
  scm_supply_plan_scm_goods scm_supply_plan_scm_goods[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_roles {
  id               String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id          Int
  role_id          Int
  created_at       DateTime?        @default(now()) @db.Timestamp(6)
  roles            roles            @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop_account scm_shop_account @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, role_id])
}

enum pricing_strategy_type {
  cost
  margin
  custom
}
