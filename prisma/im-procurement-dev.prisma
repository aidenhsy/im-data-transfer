generator client {
  provider = "prisma-client-js"
  output   = "./clients/im-procurement-dev"
}

datasource db {
  provider = "postgresql"
  url      = env("IM_PROCUREMENT_DEV_URL")
}

model big_org {
  id                   Int                    @id @default(autoincrement())
  name                 String?                @db.VarChar
  access_id            String?                @db.VarChar
  access_secret        String?                @db.VarChar
  scm_shop             scm_shop[]
  scm_shop_account     scm_shop_account[]
  scm_shop_brand       scm_shop_brand[]
  scm_shop_brand_copy1 scm_shop_brand_copy1[]
  supplier             supplier[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model brand {
  id               Int       @id(map: "brand_pk") @default(autoincrement())
  code             String?   @db.VarChar
  name             String    @db.VarChar
  short_name       String?   @db.VarChar
  logo_icon        String?   @db.VarChar
  remark           String?   @db.VarChar
  delflg           Int       @default(0)
  create_dept_id   Int?
  create_dept_name String?   @db.VarChar
  create_time      DateTime? @db.Timestamp(6)
  create_id        String?   @db.Uuid
  modify_time      DateTime? @db.Timestamp(6)
  modify_id        String?   @db.Uuid
}

model brand_cities {
  id             String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  city_id        Int?
  brand_id       Int?
  scm_shop_brand scm_shop_brand? @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cities         cities?         @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([brand_id, city_id])
  @@unique([brand_id, city_id], map: "unique_brand_city")
}

model cities {
  id             Int              @id
  name           String?          @unique(map: "unique_city_name") @db.VarChar
  brand_cities   brand_cities[]
  scm_shop       scm_shop[]
  supplier_items supplier_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model client_tier {
  id         Int        @id @default(autoincrement())
  tier_name  String?    @db.VarChar(50)
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  scm_shop   scm_shop[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model generic_items {
  id                        Int                         @id(map: "scm_goods_pkey") @default(autoincrement())
  name                      String                      @db.VarChar(60)
  category_id               Int
  status                    Int                         @default(1) @db.SmallInt
  create_time               DateTime?                   @default(now()) @db.Timestamp(6)
  update_time               DateTime?                   @default(now()) @db.Timestamp(6)
  letter_name               String?                     @db.VarChar
  photo_url                 String?                     @db.VarChar
  base_unit_id              Int?
  scm_goods_category        scm_goods_category          @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_goods_category0")
  standard_units            standard_units?             @relation(fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shop_specialty_plan_items shop_specialty_plan_items[]
  supplier_order_details    supplier_order_details[]
  supply_plan_items         supply_plan_items[]
}

model outbox_events {
  id             String    @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  aggregate_type String    @db.VarChar(255)
  aggregate_id   String    @db.VarChar(255)
  event_type     String    @db.VarChar(255)
  payload        Json
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  processed_at   DateTime? @db.Timestamp(6)
  published_at   DateTime? @db.Timestamp(6)
  retry_count    Int       @default(0)
}

model plan_item_supplier_good {
  id                String             @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  plan_item_id      String?            @db.VarChar
  supplier_item_id  String?            @db.VarChar
  shop_id           Int?
  supply_plan_items supply_plan_items? @relation(fields: [plan_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop          scm_shop?          @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_items    supplier_items?    @relation(fields: [supplier_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([plan_item_id, shop_id], map: "unique_plan_item_shop")
  @@unique([plan_item_id, supplier_item_id, shop_id], map: "unique_plan_item_supplier_shop")
  @@unique([shop_id, supplier_item_id], map: "unique_shop_supplier_item")
  @@index([plan_item_id, shop_id], map: "idx_pisg_plan_shop")
}

model scm_good_units {
  id             String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  ratio_to_base  Decimal         @db.Decimal
  name           String?         @db.VarChar
  base_unit_id   Int?
  standard_units standard_units? @relation(fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_goods_category {
  id            Int             @id @default(autoincrement())
  parent_id     Int             @default(0)
  name          String          @db.VarChar(16)
  phonetic      String          @db.VarChar(8)
  storage_id    Int?
  sort          Int             @default(0) @db.SmallInt
  status        Int             @default(1) @db.SmallInt
  level         Int?            @db.SmallInt
  serial_num    String?         @unique @db.VarChar
  generic_items generic_items[]
}

model scm_goods_stock_cities {
  good_id   Int
  stock_id  Int
  cities_id String @db.VarChar

  @@id([good_id, stock_id, cities_id])
}

model scm_inventory_detail {
  id                   Int                   @id @default(autoincrement())
  single_id            Int?
  goods_id             Int?
  goods_name           String?               @db.VarChar(60)
  qty                  Decimal?              @default(0) @db.Decimal(10, 2)
  inventory_qty        Decimal?              @default(0) @db.Decimal(10, 2)
  user_id              Int?
  price                Decimal?              @default(0) @db.Decimal(12, 6)
  sale_unit            String?               @db.VarChar(10)
  letter_name          String?               @db.VarChar
  balance_qty          Decimal?              @default(0) @db.Decimal(10, 2)
  balance_price        Decimal?              @default(0) @db.Decimal(12, 6)
  scm_inventory_single scm_inventory_single? @relation(fields: [single_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "single_id_fk")
}

model scm_inventory_single {
  id                   Int                    @id @default(autoincrement())
  shop_id              Int?
  start_date           DateTime?              @db.Date
  end_date             DateTime?              @db.Date
  create_time          DateTime?              @db.Timestamp(6)
  status               Int                    @default(0) @db.SmallInt
  user_id              Int?
  last_amount          Decimal                @default(0) @db.Decimal(12, 6)
  submit_time          DateTime?              @db.Timestamp(6)
  scm_inventory_detail scm_inventory_detail[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop {
  shop_name                              String                                   @db.VarChar(60)
  serial_num                             String?                                  @db.VarChar(60)
  address                                String?                                  @db.VarChar(200)
  longitude                              String?                                  @db.VarChar(60)
  latitude                               String?                                  @db.VarChar(60)
  create_time                            DateTime?                                @db.Timestamp(6)
  brand_id                               Int                                      @db.SmallInt
  status                                 Int                                      @default(1) @db.SmallInt
  id                                     Int                                      @id @default(autoincrement())
  serial_num2                            String?                                  @db.VarChar
  business_id                            Int?
  field                                  Int?                                     @default(0) @db.SmallInt
  field_order                            Int?                                     @default(0) @db.SmallInt
  is_join                                Int?                                     @default(0) @db.SmallInt
  tc_shop_id                             Int?                                     @default(0)
  city_id                                Int?
  model_url                              String?                                  @db.VarChar
  automatic_receiving                    Int                                      @default(1) @db.SmallInt
  is_enabled                             Boolean?                                 @default(true)
  sales_plan_id                          String?                                  @db.VarChar
  big_org_id                             Int?
  shop_pic_url                           String?                                  @db.VarChar
  client_tier_id                         Int?
  open_hours                             Json?
  plan_item_supplier_good                plan_item_supplier_good[]
  scm_shop_brand                         scm_shop_brand                           @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_brand_id38")
  big_org                                big_org?                                 @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cities                                 cities?                                  @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_city_id_fkey71")
  client_tier                            client_tier?                             @relation(fields: [client_tier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_sales_plan                          st_sales_plan?                           @relation(fields: [sales_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_sales_plan_id_fkey83")
  scm_shop_scm_shop_account              scm_shop_scm_shop_account[]
  shop_specialty_plan_item_supplier_good shop_specialty_plan_item_supplier_good[]
  shop_specialty_plan_items              shop_specialty_plan_items[]
  st_kitchen_department                  st_kitchen_department[]
  supplier_order_returns                 supplier_order_returns[]
  supplier_orders                        supplier_orders[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop_account {
  id                        Int                         @id @default(autoincrement())
  moniker                   String?                     @db.VarChar
  mobile                    String?                     @unique(map: "uniq_mobile") @db.VarChar(16)
  password                  String?                     @db.VarChar(60)
  role_type                 Int                         @default(0) @db.SmallInt
  status                    Int                         @default(1) @db.SmallInt
  created_at                DateTime?                   @default(now()) @db.Timestamp(6)
  big_org_id                Int?
  big_org                   big_org?                    @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop_scm_shop_account scm_shop_scm_shop_account[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop_brand {
  id                                                       Int                     @id @default(autoincrement())
  brand_name                                               String                  @db.VarChar(60)
  create_time                                              DateTime?               @default(now()) @db.Timestamp(6)
  tcsl_id                                                  String?                 @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  big_org_id                                               Int?                    @default(3)
  is_enabled                                               Boolean?                @default(false)
  supply_plan_id                                           Int?
  brand_cities                                             brand_cities[]
  scm_shop                                                 scm_shop[]
  big_org                                                  big_org?                @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_brand_big_org_id_fkey80")
  scm_supply_plan                                          scm_supply_plan?        @relation(fields: [supply_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_supply_plan_scm_supply_plan_brand_idToscm_shop_brand scm_supply_plan[]       @relation("scm_supply_plan_brand_idToscm_shop_brand")
  st_kitchen_department                                    st_kitchen_department[]
  st_sales_plan                                            st_sales_plan[]

  @@index([tcsl_id], map: "idx_sc_shop_brand_tcsl_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_shop_brand_copy1 {
  id          Int       @id @default(autoincrement())
  brand_name  String    @db.VarChar
  create_time DateTime? @default(now()) @db.Timestamp(6)
  tcsl_id     String?   @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  big_org_id  Int?      @default(3)
  is_enabled  Boolean?  @default(false)
  big_org     big_org?  @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([tcsl_id], map: "idx_sc_shop_brand_tcsl_id_copy1")
}

model scm_shop_scm_shop_account {
  shop_account_id  Int
  shop_id          Int
  id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  scm_shop_account scm_shop_account @relation(fields: [shop_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_scm_shop_account_shop_account_id_fkey8")
  scm_shop         scm_shop         @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "scm_shop_scm_shop_account_shop_id_fkey26")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model scm_supply_plan {
  id                                                      Int                 @id @default(autoincrement())
  name                                                    String?             @db.VarChar(60)
  serial_num                                              String?             @unique @db.VarChar
  organization_id                                         Int?
  brand_id                                                Int?
  scm_shop_brand                                          scm_shop_brand[]
  scm_shop_brand_scm_supply_plan_brand_idToscm_shop_brand scm_shop_brand?     @relation("scm_supply_plan_brand_idToscm_shop_brand", fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  st_sales_plan                                           st_sales_plan[]
  supply_plan_items                                       supply_plan_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_area {
  id                 String       @id(map: "shop_area_pk") @default(dbgenerated("uuid_generate_v4()")) @db.VarChar
  code               String?      @db.VarChar
  name               String?      @db.VarChar
  pinyin             String?      @db.VarChar
  shop_id            Int?
  process_price_flag Int?
  delflg             Int?
  shop_point         shop_point[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_info {
  id                Int       @id(map: "shop_info_pk") @default(autoincrement())
  code              String?   @db.VarChar
  name              String    @db.VarChar
  dept_shop_id      Int
  region_id         String?   @db.VarChar
  region_name       String?   @db.VarChar
  province_id       String?   @db.VarChar
  province_name     String?   @db.VarChar
  city_id           String?   @db.VarChar
  city_name         String?   @db.VarChar
  county_id         String?   @db.VarChar
  county_name       String?   @db.VarChar
  manage_type_name  String?   @db.VarChar
  shop_brand_id     Int?
  shop_brand_code   String?   @db.VarChar
  shop_brand_name   String?   @db.VarChar
  open_time         DateTime? @db.Timestamp(6)
  gc_x              Decimal?  @db.Decimal(12, 6)
  gc_y              Decimal?  @db.Decimal(12, 6)
  address           String?   @db.VarChar
  contact_tel       String?   @db.VarChar
  remark            String?   @db.VarChar
  area              String?   @db.VarChar
  legal_person_name String?   @db.VarChar
  legal_person_code String?   @db.VarChar
  shop_label_id     Int?
  shop_label_name   String?   @db.VarChar
  shop_label_code   String?   @db.VarChar
  is_open           Int?
  group_id          Int?
  external_shop_id  String?   @db.VarChar
  delflg            Int       @default(0)
  create_time       DateTime? @db.Timestamp(6)
  create_id         String?   @db.Uuid
  modify_time       DateTime? @db.Timestamp(6)
  modify_id         String?   @db.Uuid
  organization_id   Int
  organization_name String?   @db.VarChar
  legal_person_id   String?   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_info_supplier {
  supplier_id      Int
  supplier_shop_id String @db.VarChar
  shop_id          Int

  @@id([supplier_id, supplier_shop_id, shop_id], map: "shop_info_supplier_pk")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_point {
  id           String    @id(map: "shop_point_pk") @default(dbgenerated("uuid_generate_v4()")) @db.VarChar
  code         String    @db.VarChar
  name         String    @db.VarChar
  pinyin       String?   @db.VarChar
  area_id      String    @db.VarChar
  display_name String?   @db.VarChar
  type_id      String?   @db.VarChar
  type_name    String?   @db.VarChar
  is_enable    Boolean   @default(true)
  sort_order   Int       @default(0)
  is_reserve   Boolean   @default(true)
  def_capacity Int       @default(1)
  min_capacity Int       @default(1)
  max_capacity Int       @default(1)
  delflg       Int?
  shop_area    shop_area @relation(fields: [area_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_point_shop_area_id_fk")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_procurement_order {
  id                String    @id(map: "shop_procurement_order_pk") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  code              String    @unique(map: "shop_procurement_order_pk2") @db.VarChar
  status            Int
  shop_id           Int
  shop_name         String?   @db.VarChar
  shop_address      String?   @db.VarChar
  remark            Int?
  delivery_time     DateTime? @db.Timestamp(6)
  receive_time      DateTime? @db.Timestamp(6)
  brand_id          Int?
  brand_name        String?   @db.VarChar
  organization_id   Int?
  organization_name String?   @db.VarChar
  delflg            Int?
  create_dept_id    Int?
  create_dept_name  String?   @db.VarChar
  create_time       DateTime? @db.Timestamp(6)
  create_id         String?   @db.Uuid
  modify_time       DateTime? @db.Timestamp(6)
  modify_id         String?   @db.Uuid
  reference_id      String?   @db.VarChar
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_procurement_order_details {
  id                            String    @id(map: "shop_procurement_order_details_pk") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  status                        Int?
  procurement_order_id          String    @db.Uuid
  ingredients_goods_id          Int
  ingredients_goods_name        String?   @db.VarChar
  ingredients_goods_letter_name Int?
  num                           Decimal?  @db.Decimal(12, 6)
  price                         Decimal?  @db.Decimal(12, 6)
  spec_text                     String?   @db.VarChar
  dimension_id                  Int
  total_price                   Int?
  receive_num                   Decimal?  @db.Decimal(12, 6)
  reference_id                  String?   @db.VarChar
  brand_id                      Int?
  brand_name                    String?   @db.VarChar
  organization_id               Int?
  organization_name             String?   @db.VarChar
  delflg                        Int?
  create_dept_id                Int?
  create_dept_name              String?   @db.VarChar
  create_time                   DateTime? @db.Timestamp(6)
  create_id                     String?   @db.Uuid
  modify_time                   DateTime? @db.Timestamp(6)
  modify_id                     String?   @db.Uuid
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_procurement_plan {
  id                Int       @id(map: "shop_procurement_plan_pk") @default(autoincrement())
  plan_name         String    @db.VarChar
  is_enable         Boolean?
  enable_time       DateTime? @db.Timestamp(6)
  plan_type         Int?
  is_auto           Boolean?
  remark            String?   @db.VarChar
  brand_id          Int?
  brand_name        String?   @db.VarChar
  organization_id   Int?
  organization_name String?   @db.VarChar
  delflg            Int?
  create_dept_id    Int?
  create_dept_name  String?   @db.VarChar
  create_time       DateTime? @db.Timestamp(6)
  create_id         String?   @db.VarChar
  modify_time       DateTime? @db.Timestamp(6)
  modify_id         String?   @db.VarChar
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_procurement_plan_bind {
  procurement_plan_id Int
  bind_id             Int
  bind_type           Int @default(0)

  @@id([procurement_plan_id, bind_id, bind_type], map: "shop_procurement_plan_bind_pk")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_procurement_plan_ingredients_goods {
  procurement_plan_id    Int
  ingredients_goods_id   Int
  ingredients_goods_name String? @db.VarChar
  dimension_id           Int

  @@id([procurement_plan_id, ingredients_goods_id], map: "shop_procurement_plan_ingredients_goods_pk")
}

model st_food_category {
  id                  String         @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name                String?        @db.VarChar(60)
  brand_id            Int?
  is_enabled          Boolean?
  brand_code          String?        @db.VarChar(50)
  level               Int?
  brand_name          String?        @db.VarChar(50)
  is_create_temp_item Boolean?
  delflg              Int?
  parent_id           String?        @db.VarChar
  class_code          String?        @db.VarChar(20)
  st_food_item        st_food_item[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model st_food_item {
  id               String            @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name             String?           @db.VarChar(60)
  unit_name        String?           @db.VarChar(60)
  price            Decimal?          @db.Decimal
  category_id      String?           @db.VarChar
  brand_id         Int?
  is_enabled       Boolean?          @default(true)
  big_pic_url      String?           @db.VarChar
  ml_index         Int?
  create_date      DateTime?         @default(now()) @db.Date
  is_package       Boolean           @default(false)
  st_food_category st_food_category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_food_item_category_id_fkey62")
}

model st_kitchen_department {
  id                          String                        @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name                        String?                       @db.VarChar
  brand_id                    Int?
  shop_id                     Int?
  scm_shop_brand              scm_shop_brand?               @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_kitchen_department_brand_id_fkey84")
  scm_shop                    scm_shop?                     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_kitchen_department_shop_id_fkey87")
  st_kitchen_department_goods st_kitchen_department_goods[]
}

model st_kitchen_department_goods {
  id                    String                 @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  goods_id              Int?
  kitchen_department_id String?                @db.VarChar
  position              Int?
  is_enabled            Boolean                @default(true)
  spg_id                String?                @db.VarChar
  st_kitchen_department st_kitchen_department? @relation(fields: [kitchen_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tchen_department_goods_kitchen_department_id_fkey86")

  @@unique([goods_id, kitchen_department_id], map: "unique_goods_kitchen")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model st_sales_plan {
  id                     String           @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  priid                  String?          @db.VarChar
  code                   String?          @db.VarChar
  name                   String?          @db.VarChar
  isenable               Boolean?
  describe               String?          @db.VarChar
  sortorder              Int?
  isweeklimit            Boolean?
  isshiftlimit           Boolean?
  isdaylimit             Boolean?
  beginday               Decimal?         @db.Decimal
  endday                 Decimal?         @db.Decimal
  createshopid           Int?
  createshopname         String?          @db.VarChar
  saletypeid             Int?
  saletypename           String?          @db.VarChar
  brandid                Int?
  brandcode              String?          @db.VarChar
  brandname              String?          @db.VarChar
  enableprilocalpriceflg Boolean?
  iso2opriceplan         Boolean?
  ismultipriceplan       Boolean?
  istimelimit            Boolean?
  beginhour              Decimal?         @db.Decimal
  beginminute            Decimal?         @db.Decimal
  endhour                Decimal?         @db.Decimal
  endminute              Decimal?         @db.Decimal
  create_time            Decimal?         @db.Decimal
  modify_time            Decimal?         @db.Decimal
  delflg                 Int?
  belongshopid           Int?
  belongshopname         String?          @db.VarChar
  supply_plan_id         Int?
  scm_shop               scm_shop[]
  scm_shop_brand         scm_shop_brand?  @relation(fields: [brandid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "st_sales_plan_brandid_fkey79")
  scm_supply_plan        scm_supply_plan? @relation(fields: [supply_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model standard_units {
  id                   Int              @id @default(autoincrement())
  name                 String?          @db.VarChar(50)
  base_unit_id         Int?
  conversion_factor    Decimal?         @db.Decimal(12, 5)
  generic_items        generic_items[]
  scm_good_units       scm_good_units[]
  standard_units       standard_units?  @relation("standard_unitsTostandard_units", fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_standard_units standard_units[] @relation("standard_unitsTostandard_units")
  supplier_items       supplier_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stock_category {
  id                        Int                         @id @default(autoincrement())
  name                      String?                     @db.VarChar(50)
  shop_specialty_plan_items shop_specialty_plan_items[]
  supply_plan_items         supply_plan_items[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model supplier {
  id                     Int                      @id @default(autoincrement())
  supplier_name          String                   @db.VarChar(100)
  phone_number           String                   @db.VarChar(20)
  serial_num             String?                  @db.VarChar(100)
  settlement             Int?
  push_order             Int?
  is_first               Int?
  mail                   String?                  @db.VarChar(100)
  supplier_key           String?                  @db.VarChar(100)
  supplier_goods_url     String?                  @db.VarChar(100)
  brand_id               Int?
  brand_name             String?                  @db.VarChar
  organization_id        Int?
  organization_name      String?                  @db.VarChar
  delflg                 Int?
  create_dept_id         Int?
  create_dept_name       String?                  @db.VarChar
  create_time            DateTime?                @db.Timestamp(6)
  create_id              String?                  @db.Uuid
  modify_time            DateTime?                @db.Timestamp(6)
  modify_id              String?                  @db.Uuid
  refresh_items_url      String?                  @db.VarChar
  get_items_url          String?                  @db.VarChar
  place_order_url        String?                  @db.VarChar
  auth_url               String?                  @db.VarChar
  access_id              String?                  @db.VarChar
  access_secret          String?                  @db.VarChar
  big_org_id             Int?
  callback_url           String?                  @db.VarChar
  big_org                big_org?                 @relation(fields: [big_org_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_items         supplier_items[]
  supplier_order_returns supplier_order_returns[]
  supplier_orders        supplier_orders[]
  supplier_pull_records  supplier_pull_records[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model supplier_items {
  id                                     String                                   @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  name                                   String                                   @db.VarChar(60)
  status                                 Int                                      @default(1) @db.SmallInt
  create_time                            DateTime?                                @default(now()) @db.Timestamp(6)
  update_time                            DateTime?                                @default(now()) @db.Timestamp(6)
  letter_name                            String?                                  @db.VarChar
  supplier_id                            Int?
  photo_url                              String?                                  @db.VarChar
  price                                  Decimal?                                 @db.Decimal(12, 6)
  supplier_reference_id                  String?                                  @unique(map: "unique_supplier_reference_id") @db.VarChar
  cut_off_time                           String?                                  @db.VarChar
  package_unit_to_base_ratio             Int?
  package_unit_name                      String?                                  @db.VarChar(50)
  base_unit_id                           Int?
  city_id                                Int?
  weighing                               Int?
  tier_id                                Int
  category_name                          String?                                  @db.VarChar(50)
  plan_item_supplier_good                plan_item_supplier_good[]
  shop_specialty_plan_item_supplier_good shop_specialty_plan_item_supplier_good[]
  supplier                               supplier?                                @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_supplier_items_supplier")
  standard_units                         standard_units?                          @relation(fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cities                                 cities?                                  @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_order_details                 supplier_order_details[]
  supplier_order_return_details          supplier_order_return_details[]
}

model supplier_pull_records {
  id            String    @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  pull_version  String?   @db.VarChar
  is_successful Boolean?
  supplier_id   Int?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  supplier      supplier? @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supply_plan_items {
  id                      String                    @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  supply_plan_id          Int?
  item_id                 Int?
  stock_category_id       Int?
  plan_item_supplier_good plan_item_supplier_good[]
  generic_items           generic_items?            @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  stock_category          stock_category?           @relation(fields: [stock_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "supply_plan_items_stock_category_fk")
  scm_supply_plan         scm_supply_plan?          @relation(fields: [supply_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([supply_plan_id, item_id], map: "unique_supply_plan_item")
}

model submit_cart_attempts {
  id              String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  shop_id         Int?
  type            String?         @db.VarChar
  items_num       Int?
  is_successful   Boolean?        @default(false)
  created_at      DateTime?       @default(now()) @db.Timestamp(6)
  updated_at      DateTime?       @default(now()) @db.Timestamp(6)
  last_error      String?
  order_id        String          @db.VarChar
  supplier_orders supplier_orders @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supplier_order_details {
  id                            String                         @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  item_id                       Int
  price                         Decimal                        @db.Decimal(12, 4)
  order_qty                     Decimal                        @db.Decimal(12, 4)
  actual_delivery_qty           Decimal?                       @db.Decimal(12, 4)
  supplier_reference_id         String                         @db.VarChar
  cut_off_time                  String?                        @db.VarChar
  package_unit_name             String                         @db.VarChar
  package_unit_to_base_ratio    Int
  order_id                      String                         @db.VarChar
  updated_at                    DateTime?                      @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  created_at                    DateTime?                      @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  supplier_item_name            String                         @db.VarChar
  supplier_item_photo           String                         @db.VarChar
  confirm_delivery_qty          Decimal?                       @db.Decimal(12, 4)
  final_qty                     Decimal?                       @db.Decimal(12, 4)
  supplier_item_id              String?                        @db.VarChar
  total_order_amount            Decimal?                       @db.Decimal(12, 2)
  total_final_amount            Decimal?                       @db.Decimal(12, 2)
  is_locked                     Boolean                        @default(false)
  generic_items                 generic_items                  @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_orders               supplier_orders                @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_items                supplier_items?                @relation(fields: [supplier_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_order_return_details supplier_order_return_details?

  @@unique([supplier_reference_id, order_id], map: "unique_reference_order")
}

model supplier_orders {
  id                            String                          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  shop_id                       Int
  supplier_id                   Int?
  irregular_items               Int?                            @default(0)
  status                        Int                             @default(0)
  order_date                    String                          @db.VarChar(50)
  delivery_date                 String                          @db.VarChar(50)
  type                          Int
  created_at                    DateTime                        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at                    DateTime?                       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  delivery_time                 DateTime?                       @db.Timestamp(6)
  supplier_note                 String?
  order_amount                  Decimal?                        @db.Decimal(12, 4)
  actual_amount                 Decimal?                        @db.Decimal(12, 4)
  receive_time                  DateTime?                       @db.Timestamp(6)
  sent_time                     DateTime?                       @db.Timestamp(6)
  estimated_delivery_time       DateTime?                       @db.Timestamp(6)
  submit_cart_attempts          submit_cart_attempts[]
  supplier_order_details        supplier_order_details[]
  supplier_order_returns        supplier_order_returns[]
  supplier_order_status_history supplier_order_status_history[]
  scm_shop                      scm_shop                        @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_supplier_orders_shop")
  supplier                      supplier?                       @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supplier_order_status_history {
  id              String          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  order_id        String          @db.VarChar
  status          Int
  try_count       Int             @default(0)
  notified_at     DateTime?       @db.Timestamp(6)
  created_at      DateTime        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  supplier_orders supplier_orders @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model shop_specialty_plan_item_supplier_good {
  id                        String                     @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar(50)
  plan_item_id              String?                    @db.VarChar(50)
  supplier_item_id          String?                    @db.VarChar(50)
  shop_id                   Int?
  shop_specialty_plan_items shop_specialty_plan_items? @relation(fields: [plan_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_spec_plan_item_supplier_good_plan_item_id_fkey")
  scm_shop                  scm_shop?                  @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_spec_plan_item_supplier_good_shop_id_fkey")
  supplier_items            supplier_items?            @relation(fields: [supplier_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_spec_plan_item_supplier_good_supplier_item_id_fkey")

  @@unique([plan_item_id, shop_id], map: "shop_spec_unique_plan_item_shop")
  @@unique([plan_item_id, supplier_item_id, shop_id], map: "shop_spec_unique_plan_item_supplier_shop")
  @@unique([shop_id, supplier_item_id], map: "shop_spec_unique_shop_supplier_item")
  @@index([plan_item_id, shop_id], map: "idx_pisg_shop_spec_plan_shop")
}

model shop_specialty_plan_items {
  id                                     String                                   @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  shop_id                                Int?
  item_id                                Int?
  stock_category_id                      Int?
  shop_specialty_plan_item_supplier_good shop_specialty_plan_item_supplier_good[]
  generic_items                          generic_items?                           @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop                               scm_shop?                                @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  stock_category                         stock_category?                          @relation(fields: [stock_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, item_id], map: "shop_specialty_plan_items_unique")
}

model supplier_order_return_details {
  id                     String                 @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  return_id              String                 @db.VarChar
  supplier_item_id       String                 @db.VarChar
  source_detail_id       String                 @unique(map: "supplier_order_return_details_source_detail_id_uk") @db.VarChar
  qty_returned           Decimal                @db.Decimal(12, 4)
  unit_price             Decimal                @db.Decimal(12, 2)
  total_value            Decimal?               @default(dbgenerated("(qty_returned * unit_price)")) @db.Decimal(12, 2)
  created_at             DateTime               @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at             DateTime               @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  supplier_order_returns supplier_order_returns @relation(fields: [return_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_order_details supplier_order_details @relation(fields: [source_detail_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_items         supplier_items         @relation(fields: [supplier_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supplier_order_return_reasons {
  id                     Int                      @id
  name                   String?                  @db.VarChar
  supplier_order_returns supplier_order_returns[]
}

model supplier_order_returns {
  id                            String                          @id @default(dbgenerated("(uuid_generate_v4())::character varying")) @db.VarChar
  supplier_id                   Int
  shop_id                       Int
  original_order_id             String                          @db.VarChar
  status                        Int                             @default(0)
  note                          String?
  created_at                    DateTime                        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  updated_at                    DateTime                        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Shanghai'::text)")) @db.Timestamp(6)
  return_reason_id              Int
  supplier_order_return_details supplier_order_return_details[]
  supplier_orders               supplier_orders                 @relation(fields: [original_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier_order_return_reasons supplier_order_return_reasons   @relation(fields: [return_reason_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  scm_shop                      scm_shop                        @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier                      supplier                        @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum pricing_strategy_type {
  cost
  margin
  custom
}
